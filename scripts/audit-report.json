{
  "timestamp": "2025-10-12T22:57:01.151Z",
  "summary": {
    "score": 0,
    "critical": 29,
    "high": 56,
    "medium": 22,
    "low": 1795,
    "totalViolations": 1902,
    "breakdown": {
      "criticalPenalty": 435,
      "highPenalty": 560,
      "mediumPenalty": 110,
      "lowPenalty": 1795,
      "totalPenalty": 2900
    }
  },
  "violations": [
    {
      "file": "frontend/src/app/blog/page.tsx",
      "line": 136,
      "content": "const handleArticleClick = (article: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/dashboard/superadmin/ai-training/page.tsx",
      "line": 35,
      "content": "icon: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/dashboard/superadmin/clients/add/page.tsx",
      "line": 34,
      "content": "const handleInputChange = (field: keyof FormData, value: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/dashboard/superadmin/performance/page.tsx",
      "line": 92,
      "content": "// TODO: Replace with real API call when employee selection is ready",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "frontend/src/app/dashboard/superadmin/structure/page.tsx",
      "line": 141,
      "content": "let structureData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/resources/page.tsx",
      "line": 173,
      "content": "const handleDownload = (resource: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/structure-analysis/page.tsx",
      "line": 366,
      "content": "{result.data.richAnalysis.recommendations.map((rec: any, idx: number) => (",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/app/survey/[token]/page.tsx",
      "line": 44,
      "content": "// TODO: Add token validation endpoint",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "frontend/src/app/survey/[token]/report/page.tsx",
      "line": 140,
      "content": "{report.overallSummary.developmentAreas.map((area: any, idx: number) => (",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/dashboard/IndividualEmployeeView.tsx",
      "line": 218,
      "content": "recommendations: (data.report.recommendations || []).map((rec: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/dashboard/TableComponent.tsx",
      "line": 14,
      "content": "data: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/dashboard/TableComponent.tsx",
      "line": 15,
      "content": "onRowClick?: (row: any) => void;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/dashboard/TenantSelector.tsx",
      "line": 326,
      "content": "// TODO: Replace with actual API endpoint when available",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "frontend/src/components/dashboard/TenantSelector.tsx",
      "line": 328,
      "content": "// const response = await superadminService.getEmployees({ tenantId });",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "frontend/src/components/skills/ConversationalBOT.tsx",
      "line": 42,
      "content": "existingProfile?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/skills/ConversationalBOT.tsx",
      "line": 43,
      "content": "onProfileUpdate?: (profileData: any) => void;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/components/skills/ConversationalBOT.tsx",
      "line": 196,
      "content": "const calculateCompletion = (extractedData: any): number => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 51,
      "content": "register: (data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 61,
      "content": "analyze: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 71,
      "content": "analyze: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 81,
      "content": "analyze: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 91,
      "content": "createGoal: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 97,
      "content": "createReview: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 105,
      "content": "createRequisition: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 111,
      "content": "createCandidate: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 113,
      "content": "assessCandidate: (tenantId: string, candidateId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 135,
      "content": "updateClient: (clientId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 143,
      "content": "createClient: (data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 155,
      "content": "create: (tenantId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/lib/api-client.ts",
      "line": 157,
      "content": "update: (tenantId: string, employeeId: string, data: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 35,
      "content": "async createTenant(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 40,
      "content": "async updateTenant(id: number, data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 77,
      "content": "async runStructureAnalysis(tenantId: number, data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 87,
      "content": "async runCultureAnalysis(tenantId: number, data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 140,
      "content": "async analyzeStructure(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 151,
      "content": "async launchCultureSurvey(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 167,
      "content": "async createEmployee(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 172,
      "content": "async updateEmployee(id: number, data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "frontend/src/services/dashboard.service.ts",
      "line": 199,
      "content": "async updateMyProfile(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/config/performance.ts",
      "line": 56,
      "content": "filter: (req: any, res: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/db/schema/workflows.ts",
      "line": 83,
      "content": "data?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/middleware/auth.ts",
      "line": 42,
      "content": "const decoded = jwt.verify(token, jwtSecret) as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/middleware/tenant.ts",
      "line": 379,
      "content": "// TODO: Implement actual usage checking logic",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/middleware/tenant.ts",
      "line": 293,
      "content": "export const getTenantSettings = (tenant: any, key?: string, defaultValue?: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/middleware/tenant.ts",
      "line": 308,
      "content": "export const hasTenantFeature = (tenant: any, feature: string): boolean => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/middleware/tenant.ts",
      "line": 320,
      "content": "export const getTenantLimits = (tenant: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/admin.ts",
      "line": 68,
      "content": "? cultureScores.reduce((sum: number, c: any) => sum + (c.alignmentScore || 0), 0) / cultureScores.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/admin.ts",
      "line": 81,
      "content": "analysesThisMonth: analysisCount.filter((a: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/admin.ts",
      "line": 171,
      "content": "const sanitizedUsers = usersList.map((u: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/admin.ts",
      "line": 396,
      "content": "avgAlignmentScore: assessments.reduce((sum: number, a: any) => sum + (a.alignmentScore || 0), 0) / assessments.length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/analyses.ts",
      "line": 531,
      "content": "let richAnalysis: any = null;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/analyses.ts",
      "line": 624,
      "content": "result.recommendations = result.recommendations.map((rec: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/auth.ts",
      "line": 28,
      "content": "function generateToken(user: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/auth.ts",
      "line": 185,
      "content": "const decoded = jwt.verify(token, process.env.SESSION_SECRET || 'default-secret') as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 42,
      "content": "const values = cylinders.flatMap((cylinder: any, index: number) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 61,
      "content": "cylinders: cylinders.map((c: any, index: number) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 245,
      "content": "orderBy: (assessments: any, { desc }: any) => [desc(assessments.completedAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 493,
      "content": "orderBy: (assessments: any, { desc }: any) => [desc(assessments.completedAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 537,
      "content": "orderBy: (assessments: any, { desc }: any) => [desc(assessments.completedAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 576,
      "content": "orderBy: (assessments: any, { desc }: any) => [desc(assessments.completedAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 614,
      "content": "orderBy: (assessments: any, { desc }: any) => [desc(assessments.completedAt)],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 706,
      "content": "orderBy: (reports: any, { desc }: any) => [desc(reports.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 931,
      "content": "cylinders: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 985,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1049,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1089,
      "content": "function hasManagerPermissions(user: any, departmentId: string): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1123,
      "content": "orderBy: (reports: any, { desc }: any) => [desc(reports.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1158,
      "content": "assessments: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1172,
      "content": "orderBy: (reports: any, { desc }: any) => [desc(reports.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1310,
      "content": "mappings: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1311,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1349,
      "content": "function aggregateEmployeeAssessments(assessments: any[]): {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1383,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1439,
      "content": "aggregatedData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1441,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1499,
      "content": "assessments: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1500,
      "content": "cylinders: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1503,
      "content": "const departmentGroups: { [key: string]: any[] } = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1532,
      "content": "culturalHealth: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1533,
      "content": "currentAnalysis: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1534,
      "content": "desiredAnalysis: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1535,
      "content": "engagementStats: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1536,
      "content": "recognitionStats: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1786,
      "content": "report: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 632,
      "content": "const tenantId = assessment.tenantId || (assessment.user as any)?.tenantId;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1144,
      "content": "a => a.user && (a.user as any).departmentId === departmentId",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1176,
      "content": "const reportData = tenantMapping?.reportData as any || {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1506,
      "content": "const deptId = (assessment.user as any)?.departmentId || 'unknown';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1636,
      "content": "// const analysis = await engagementAgent['runKnowledgeEngine'](context);",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/routes/culture-assessment.ts",
      "line": 1721,
      "content": "// const analysis = await recognitionAgent['runKnowledgeEngine'](context);",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/routes/demo.ts",
      "line": 131,
      "content": "if ((req as any).user.role !== 'superadmin') {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/demo.ts",
      "line": 144,
      "content": "query = query.where(eq(demoRequests.status, status)) as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/demo.ts",
      "line": 180,
      "content": "if ((req as any).user.role !== 'superadmin') {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/demo.ts",
      "line": 223,
      "content": "if ((req as any).user.role !== 'superadmin') {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/employee.ts",
      "line": 53,
      "content": "coursesInProgress: courseEnrollmentsData.filter((l: any) => !l.completedAt).length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/employee.ts",
      "line": 54,
      "content": "coursesCompleted: courseEnrollmentsData.filter((l: any) => l.completedAt).length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 11,
      "content": "// import { generatePDFReport } from '../services/reports/structure-report.js'; // TODO: Implement",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 152,
      "content": "// const pdfBuffer = await generatePDFReport(result); // TODO: Implement PDF generation",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 206,
      "content": "const processedResponses = employeeResponses?.map((response: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 242,
      "content": "averageRecognition: processedResponses.reduce((sum: number, r: any) => sum + r.recognition, 0) / Math.max(processedResponses.length, 1),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 243,
      "content": "averageEngagement: processedResponses.reduce((sum: number, r: any) => sum + r.engagement, 0) / Math.max(processedResponses.length, 1)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 339,
      "content": "departmentBreakdown: assessmentData?.departments?.map((dept: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 491,
      "content": "departmentAnalysis: departments?.map((dept: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 530,
      "content": "roles: roles?.map((role: any) => role.title) || [\"Role 1\", \"Role 2\", \"Role 3\"],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 775,
      "content": "departmentPerformance: departments?.map((dept: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1074,
      "content": "function analyzeValuesAlignment(responses: any[], framework: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1081,
      "content": "responses.forEach((response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1086,
      "content": "const overlap = personalValues.filter((value: any) => currentExperience.includes(value)).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1096,
      "content": "function calculateCulturalEntropy(responses: any[], framework: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1103,
      "content": "responses.forEach((response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1108,
      "content": "const gap = desiredExp.filter((value: any) => !currentExp.includes(value)).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1119,
      "content": "function calculateCylinderScores(responses: any[], framework: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1133,
      "content": "framework.forEach((cylinder: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1135,
      "content": "const cylinderValues = cylinder.positiveValues.map((v: any) => v.name);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1141,
      "content": "responses.forEach((response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1143,
      "content": "const matches = currentExp.filter((value: any) => cylinderValues.includes(value)).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1156,
      "content": "function generateEmployeeReports(responses: any[], framework: any, companyValues: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1157,
      "content": "return responses.map((response: any, index: number) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1183,
      "content": "function generateAdminReport(responses: any[], framework: any, companyValues: any, vision: any, mission: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1217,
      "content": "function mapValuesToFramework(values: any[], framework: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1218,
      "content": "return framework.map((cylinder: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1220,
      "content": "matchingValues: values.filter((value: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1221,
      "content": "cylinder.positiveValues.some((v: any) => v.name === value)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1223,
      "content": "score: values.filter((value: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1224,
      "content": "cylinder.positiveValues.some((v: any) => v.name === value)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1229,
      "content": "function calculateAlignment(values1: any[], values2: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1235,
      "content": "function aggregateResponses(responses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1243,
      "content": "allValues.forEach((value: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1255,
      "content": "function generatePersonalityInsights(personalValues: any[], framework: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1256,
      "content": "const cylinderAffinities = framework.map((cylinder: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1259,
      "content": "affinity: personalValues.filter((value: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1260,
      "content": "cylinder.positiveValues.some((v: any) => v.name === value)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1262,
      "content": "matchingValues: personalValues.filter((value: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1263,
      "content": "cylinder.positiveValues.some((v: any) => v.name === value)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1265,
      "content": "})).sort((a: any, b: any) => b.affinity - a.affinity);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1423,
      "content": "function generatePersonalRecommendations(response: any, framework: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1439,
      "content": "function analyzeDepartmentCulture(responses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1447,
      "content": "function analyzeOrganizationalEntropy(responses: any[], framework: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1455,
      "content": "function calculateCompanyValuesAlignment(responses: any[], companyValues: any, framework?: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1459,
      "content": "function identifyValuesGaps(responses: any[], companyValues: any, framework?: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1463,
      "content": "function calculateOverallCultureHealth(responses: any[], framework?: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1467,
      "content": "function calculateCylinderHealth(responses: any[], framework: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1471,
      "content": "function analyzeCultureStrategyAlignment(responses: any[], vision: any, mission: any, framework?: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1479,
      "content": "function generateStrategicCultureRecommendations(responses: any[], vision: any, mission: any, framework: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 1487,
      "content": "function generateCultureActionItems(responses: any[], framework: any, companyValues: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 152,
      "content": "// const pdfBuffer = await generatePDFReport(result); // TODO: Implement PDF generation",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/routes/entry.ts",
      "line": 11,
      "content": "// import { generatePDFReport } from '../services/reports/structure-report.js'; // TODO: Implement",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 26,
      "content": "spanAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 27,
      "content": "layerAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 28,
      "content": "strategyAlignment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 29,
      "content": "recommendations: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 638,
      "content": "${strategyAlignment.misalignments.map((gap: any) => `",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/export.ts",
      "line": 730,
      "content": "${recommendations.map((rec: any) => `",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 62,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 113,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 439,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 503,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 542,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/hiring.ts",
      "line": 593,
      "content": "const user = (req as any).user;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/modules.ts",
      "line": 95,
      "content": "// TODO: Implement talent profiles table",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/modules.ts",
      "line": 106,
      "content": "// TODO: Implement succession plans table",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/modules.ts",
      "line": 117,
      "content": "// TODO: Implement compensation data table",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/modules.ts",
      "line": 136,
      "content": "// TODO: Implement moduleExecutions table",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/orchestrator.ts",
      "line": 216,
      "content": "// TODO: Implement single agent run - runArchitectAI runs all agents",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/orchestrator.ts",
      "line": 73,
      "content": ".then(async (results: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/payment.ts",
      "line": 19,
      "content": "if ((req as any).user.role !== 'superadmin') {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/public-structure.ts",
      "line": 58,
      "content": "const orgStructure: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/public-structure.ts",
      "line": 97,
      "content": "let richAnalysis: any = null;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 639,
      "content": "orderBy: (reqs: any, { desc }: any) => [desc(reqs.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 726,
      "content": "orderBy: (analyses: any, { desc }: any) => [desc(analyses.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 852,
      "content": "gapAnalysis: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 872,
      "content": "gaps: gapAnalysis.criticalGaps.map((g: any) => g.skill)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 879,
      "content": "trainingRecommendations: gapAnalysis.trainingRecommendations.filter((t: any) => t.priority === 'immediate')",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 903,
      "content": "gaps: gapAnalysis.moderateGaps.map((g: any) => g.skill)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 910,
      "content": "trainingRecommendations: gapAnalysis.trainingRecommendations.filter((t: any) => t.priority === 'short-term')",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1011,
      "content": "currentExperience: extracted.experience.filter((exp: any) => !exp.endDate || exp.endDate === 'Present'),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1012,
      "content": "pastExperience: extracted.experience.filter((exp: any) => exp.endDate && exp.endDate !== 'Present'),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1030,
      "content": "function calculateProfileCompletion(data: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1071,
      "content": "orderBy: (analyses: any, { desc }: any) => [desc(analyses.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1077,
      "content": "orderBy: (reqs: any, { desc }: any) => [desc(reqs.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1183,
      "content": "orderBy: (reqs: any, { desc }: any) => [desc(reqs.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1265,
      "content": "orderBy: (reqs: any, { desc }: any) => [desc(reqs.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1340,
      "content": "topPriorities: aggregatedGaps.criticalGaps.slice(0, 5).map((gap: any) => gap.skill),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1359,
      "content": "function calculateSkillsMet(profile: any, requiredSkills: string[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1361,
      "content": "...(profile.technicalSkills || []).map((s: any) => s.skill.toLowerCase()),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1373,
      "content": "function aggregateSkills(profiles: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1377,
      "content": "(profile.technicalSkills || []).forEach((skill: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1421,
      "content": "function aggregateGaps(analyses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1430,
      "content": "(analysis.criticalGaps || []).forEach((gap: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1435,
      "content": "(analysis.moderateGaps || []).forEach((gap: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1461,
      "content": "function calculateOrganizationSkillsCoverage(aggregatedSkills: any, requiredSkills: string[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1472,
      "content": "function generateDepartmentRecommendations(aggregatedGaps: any, deptRequirements: string[]): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1481,
      "content": "actionItems: aggregatedGaps.criticalGaps.slice(0, 3).map((gap: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1505,
      "content": "function generateOrganizationRecommendations(aggregatedGaps: any, requirements: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1515,
      "content": "`Top priority: ${aggregatedGaps.criticalGaps.slice(0, 3).map((g: any) => g.skill).join(', ')}`,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 652,
      "content": "const departmentSkills = department && (requirements.departmentalSkills as any)[department]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 653,
      "content": "? (requirements.departmentalSkills as any)[department]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 656,
      "content": "const roleSkills = role && (requirements.roleSkills as any)[role]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 657,
      "content": "? (requirements.roleSkills as any)[role]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1121,
      "content": "totalSkills: (profile.technicalSkills as any[] || []).length + (profile.softSkills as any[] || []).length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1122,
      "content": "criticalGapsCount: (gapAnalysis?.criticalGaps as any[] || []).length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1186,
      "content": "const deptRequirements = requirements && (requirements.departmentalSkills as any)[departmentId]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1187,
      "content": "? (requirements.departmentalSkills as any)[departmentId]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1229,
      "content": "criticalGapsCount: (analysis.criticalGaps as any[] || []).length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1291,
      "content": "sum + (a.criticalGaps as any[] || []).length, 0",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/skills-analysis.ts",
      "line": 1342,
      "content": "sum + (a.trainingRecommendations as any[] || []).length, 0",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/social-media.ts",
      "line": 232,
      "content": "function getWeeklyStrategy(week: number): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/superadmin.ts",
      "line": 263,
      "content": "monthlyRevenue: 0, // TODO: Calculate from billing",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/superadmin.ts",
      "line": 182,
      "content": "const filteredUpdates: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/superadmin.ts",
      "line": 232,
      "content": "const updates: any = { updatedAt: new Date() };",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/superadmin.ts",
      "line": 79,
      "content": "const { Name, Email, Title, Department } = record as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/test-ai.ts",
      "line": 13,
      "content": "const response = await (agent as any).reasoningAI.call({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 340,
      "content": "// TODO: Replace with actual AI agent when APIs are configured",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 96,
      "content": "const roots: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 114,
      "content": "function buildHierarchyText(employee: any, level: number = 0): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 383,
      "content": "function parseOrgTextToStructure(orgText: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 385,
      "content": "const roles: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 407,
      "content": "function buildHierarchy(roles: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 411,
      "content": "const buildTree = (role: any): any => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/routes/upload.ts",
      "line": 423,
      "content": "function generateMockStructureAnalysis(orgText: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/scripts/migrate.ts",
      "line": 3,
      "content": "// const migrationClient = db; // Not needed, using db directly",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 202,
      "content": "// TODO: Implement when recommendations table is added to schema",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 269,
      "content": "// TODO: Implement when recommendations table is added to schema",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 15,
      "content": "inputData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 22,
      "content": "output: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 25,
      "content": "triggers: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 26,
      "content": "recommendations: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 79,
      "content": "let result: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 163,
      "content": "inputData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 187,
      "content": "const conditions: any[] = [eq(agentAnalyses.tenantId, tenantId)];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 220,
      "content": "triggerData: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 248,
      "content": "recommendationData: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/agent-manager.ts",
      "line": 168,
      "content": "agentType: agentType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 10,
      "content": "response: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 15,
      "content": "finalResult: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 238,
      "content": "private calculateConsensus(results: AnalysisResult[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 266,
      "content": "private mergeJsonResponses(responses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 268,
      "content": "const merged: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 296,
      "content": "private selectBestValue(values: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 345,
      "content": "protected validateFactBased(analysis: any, providedData: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 368,
      "content": "abstract analyze(input: any): Promise<any>;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 385,
      "content": "data: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 420,
      "content": "private assessDataQuality(data: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 433,
      "content": "private countFields(obj: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 445,
      "content": "private countFilledFields(obj: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/base-agent.ts",
      "line": 457,
      "content": "private identifyMissingCriticalData(data: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 21,
      "content": "output: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 31,
      "content": "finalOutput: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 66,
      "content": "async analyze(inputData: any): Promise<AnalysisResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 99,
      "content": "protected async runKnowledgeEngine(inputData: any): Promise<EngineResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 123,
      "content": "protected async runDataEngine(inputData: any, knowledgeOutput: any): Promise<EngineResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 148,
      "content": "inputData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 149,
      "content": "knowledgeOutput: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 150,
      "content": "dataOutput: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 181,
      "content": "protected abstract processData(inputData: any): Promise<any>;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 187,
      "content": "protected abstract buildKnowledgePrompt(inputData: any, frameworks: any): string;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 188,
      "content": "protected abstract buildDataPrompt(processedData: any, knowledgeOutput: any): string;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 189,
      "content": "protected abstract buildReasoningPrompt(inputData: any, knowledgeOutput: any, dataOutput: any): string;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 191,
      "content": "protected abstract parseKnowledgeOutput(response: string): any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 192,
      "content": "protected abstract parseDataOutput(response: string): any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/base/three-engine-agent.ts",
      "line": 193,
      "content": "protected abstract parseReasoningOutput(response: string): any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 6,
      "content": "let DEFAULT_VALUES_FRAMEWORK: any = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 125,
      "content": "historicalData?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 356,
      "content": "industryData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 360,
      "content": "const industryAvg = Object.values(industryData.averages).reduce((sum: number, val: any) => sum + val, 0) / Object.keys(industryData.averages).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 363,
      "content": "const topScore = Object.values(industryData.topQuartile).reduce((sum: number, val: any) => sum + val, 0) / Object.keys(industryData.topQuartile).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 364,
      "content": "const bottomScore = Object.values(industryData.bottomQuartile).reduce((sum: number, val: any) => sum + val, 0) / Object.keys(industryData.bottomQuartile).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 412,
      "content": "industryData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 497,
      "content": "industryData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 584,
      "content": "industryData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 626,
      "content": "industryData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 687,
      "content": ".filter((s: any) => s.trim().length > 20)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking/benchmarking-agent.ts",
      "line": 689,
      "content": ".map((opp: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 226,
      "content": "protected buildKnowledgePrompt(inputData: BenchmarkingAnalysisInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 242,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 261,
      "content": "protected buildReasoningPrompt(inputData: BenchmarkingAnalysisInput, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 283,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 292,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 301,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 310,
      "content": "private processMetrics(tenantMetricsData: any[], requestedMetrics: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 322,
      "content": "private processBenchmarks(benchmarks: any[], requestedMetrics: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 323,
      "content": "const processed: { [metric: string]: any } = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/benchmarking-agent.ts",
      "line": 342,
      "content": "private processPeerData(peerMetrics: any[], tenantInfo: any, requestedMetrics: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 219,
      "content": "valueMapping: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 282,
      "content": "valueMapping: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 327,
      "content": "private calculateCulturalEntropy(mapping: any, assessments?: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 332,
      "content": "Object.values(mapping.cylinderDistribution).forEach((dist: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 350,
      "content": "private aggregateMappingResults(results: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 367,
      "content": "private synthesizeStrategyAlignment(analyses: any[]): StrategyAlignment {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 384,
      "content": "private identifyTriggers(alignment: StrategyAlignment, mapping: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 410,
      "content": "private async analyzeCylinderHealth(mapping: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 434,
      "content": "private async analyzeEmployeeCultureGap(assessments: any[], companyMapping: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture/culture-agent.ts",
      "line": 447,
      "content": "private async saveAnalysisResults(report: any, tenantId: string): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 567,
      "content": "// TODO: Load frameworks from database when cultureFrameworks table is implemented",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 41,
      "content": "engagementAnalysis?: any; // Results from Engagement Agent",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 42,
      "content": "recognitionAnalysis?: any; // Results from Recognition Agent",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 54,
      "content": "action: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 159,
      "content": "${framework.map((cyl: any, idx: number) => `Cylinder ${idx + 1}: ${cyl.name} - ${cyl.ethicalPrinciple}`).join('\\n')}",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1010,
      "content": "protected buildKnowledgePrompt(inputData: CultureAnalysisInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1024,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1043,
      "content": "protected buildReasoningPrompt(inputData: CultureAnalysisInput, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1065,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1074,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1083,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1092,
      "content": "private aggregateValues(valueArrays: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1247,
      "content": "private mapValuesToCylinders(values: string[], framework: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1248,
      "content": "const mapping: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1262,
      "content": "const isEnabling = enablingValues.some((v: any) => v.name.toLowerCase() === valueLower);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1263,
      "content": "const isLimiting = limitingValues.some((v: any) => v.name.toLowerCase() === valueLower);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1323,
      "content": "private calculateCultureAlignment(personalMapping: any, companyCulture: any, framework: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1347,
      "content": "const personalValuesList = personalMapping.values.map((v: any) => v.value.toLowerCase());",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1391,
      "content": "private formatValuesCylinderMapping(mapping: any, framework: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1406,
      "content": "private formatCompanyCylinderMapping(companyCulture: any, framework: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1433,
      "content": "export async function analyzeCulture(input: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1310,
      "content": "vision: (tenant[0] as any).vision,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/culture-agent.ts",
      "line": 1311,
      "content": "mission: (tenant[0] as any).mission",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 15,
      "content": "consensus: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 17,
      "content": "providers: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 20,
      "content": "const runTriad = async (prompt: string, options: any): Promise<TriadResult> => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 90,
      "content": "historicalData?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 91,
      "content": "demographics?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 278,
      "content": "historicalData?: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 328,
      "content": "demographics?: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 409,
      "content": "driversBarriers: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 431,
      "content": "driversBarriers: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement/engagement-agent.ts",
      "line": 552,
      "content": "driversBarriers: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 228,
      "content": "async executeReasoningEngine(knowledgeResult: any, dataResult: any): Promise<EngagementResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 276,
      "content": "private extractEngagementMetrics(assessments: any[], employees: any[], reviews: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 290,
      "content": "private calculateEngagementFactors(dataResult: any, knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 306,
      "content": "private calculateWorkSatisfaction(assessments: any[], reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 319,
      "content": "private calculateCareerDevelopment(employees: any[], reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 327,
      "content": "private calculateWorkLifeBalance(assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 340,
      "content": "private calculateCompensationSatisfaction(assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 353,
      "content": "private calculateManagementQuality(assessments: any[], reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 364,
      "content": "private calculateRecognitionLevel(assessments: any[], reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 377,
      "content": "private calculateAutonomyLevel(assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 390,
      "content": "private calculatePurposeAlignment(assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 403,
      "content": "private performSegmentAnalysis(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 413,
      "content": "private analyzeByDepartment(employees: any[], assessments: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 434,
      "content": "private analyzeByTenure(employees: any[], assessments: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 464,
      "content": "private analyzeByRole(employees: any[], assessments: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 485,
      "content": "private identifyRiskIndicators(dataResult: any, knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 494,
      "content": "private identifyFlightRisk(employees: any[], assessments: any[], knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 510,
      "content": "private identifyBurnoutRisk(employees: any[], assessments: any[], knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 526,
      "content": "private analyzeTrends(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 546,
      "content": "private calculateOverallEngagementScore(factors: any, knowledgeResult: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 557,
      "content": "private generateInsights(factors: any, segmentAnalysis: any, riskIndicators: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 587,
      "content": "const lowEngagementDepts = segmentAnalysis.byDepartment.filter((d: any) => d.score < 65);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 589,
      "content": "insights.push(`Departments needing attention: ${lowEngagementDepts.map((d: any) => d.department).join(', ')}`);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 595,
      "content": "private generateRecommendations(factors: any, riskIndicators: any, knowledgeResult: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 646,
      "content": "private generateActionItems(recommendations: string[], riskIndicators: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 705,
      "content": "private calculateParticipationTrend(assessments: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 716,
      "content": "private calculateDepartmentDistribution(assessments: any[], employees: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 737,
      "content": "private assessDataQuality(assessments: any[], employees: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 750,
      "content": "protected async processData(inputData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 766,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 770,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 774,
      "content": "protected buildReasoningPrompt(inputData: any, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 778,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 782,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/engagement-agent.ts",
      "line": 786,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/candidate-assessor.test.ts",
      "line": 57,
      "content": "let mockConfig: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/candidate-assessor.test.ts",
      "line": 58,
      "content": "let mockAssessmentInput: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/candidate-assessor.test.ts",
      "line": 349,
      "content": "await expect(agent.assessCandidate(invalidInput as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 79,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mockData\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 93,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mockData\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 107,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mockData\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 79,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 93,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 107,
      "content": "const mockData = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 122,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 144,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 166,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 188,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 209,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 256,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 276,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 298,
      "content": "const mockInput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 20,
      "content": "let mockConfig: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 238,
      "content": "await expect(agent.developRecruitmentStrategy(invalidInput as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 248,
      "content": "await expect(agent.developRecruitmentStrategy(incompleteInput as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/__tests__/recruitment-strategist.test.ts",
      "line": 254,
      "content": "jest.spyOn(agent as any, 'analyze').mockRejectedValue(new Error('Network error'));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 17,
      "content": "resume: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 18,
      "content": "skills: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 19,
      "content": "experience: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 20,
      "content": "education: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 26,
      "content": "requiredSkills: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 35,
      "content": "culture?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 38,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 68,
      "content": "alignment: any; // Mizan 7 Cylinders alignment",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 114,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 135,
      "content": "constructor(config?: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 158,
      "content": "private async analyze(input: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 434,
      "content": "protected async processData(data: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 456,
      "content": "private analyzeSkills(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 509,
      "content": "private skillsMatch(candidateSkill: any, requiredSkill: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 519,
      "content": "private analyzeExperience(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 550,
      "content": "private assessCareerProgression(experience: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 589,
      "content": "private assessIndustryMatch(experience: any[], input: CandidateAssessmentInput): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 597,
      "content": "private calculateRelevantExperience(experience: any[], input: CandidateAssessmentInput): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 623,
      "content": "private analyzeEducation(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 638,
      "content": "private checkEducationRequirements(education: any[], requirements: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 651,
      "content": "private getHighestDegree(education: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 666,
      "content": "private analyzeCultureFit(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 677,
      "content": "const cylinderScores: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 727,
      "content": "private analyzeResume(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 740,
      "content": "private assessResumeCompleteness(candidate: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 752,
      "content": "private analyzeFit(input: CandidateAssessmentInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 791,
      "content": "protected buildReasoningPrompt(knowledgeResult: any, dataResult: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 853,
      "content": "protected parseReasoningOutput(output: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 887,
      "content": "private structureOutput(result: any, input: CandidateAssessmentInput, cultureFitAssessment?: CultureFitAssessment | null): CandidateAssessmentOutput {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 615,
      "content": "const requiredLevelNum = (levelMap as any)[requiredLevel] || 2;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/candidate-assessor.ts",
      "line": 1,
      "content": "// import { ThreeEngineAgent } from '../base/three-engine-agent.js';",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 14,
      "content": "requiredSkills: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 24,
      "content": "structureAnalysis?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 25,
      "content": "organizationalContext?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 27,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 77,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 98,
      "content": "constructor(config?: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 121,
      "content": "private async analyze(input: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 368,
      "content": "protected async processData(data: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 390,
      "content": "private analyzePosition(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 406,
      "content": "private analyzeMarket(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 423,
      "content": "private analyzeBudget(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 443,
      "content": "private analyzeTiming(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 464,
      "content": "private analyzeOrganizationalFit(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 476,
      "content": "private analyzeCompetition(input: RecruitmentStrategyInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 525,
      "content": "private calculateMilestones(totalDays: number): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 593,
      "content": "protected buildReasoningPrompt(knowledgeResult: any, dataResult: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 648,
      "content": "protected parseReasoningOutput(output: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 708,
      "content": "private structureOutput(result: any, input: RecruitmentStrategyInput): RecruitmentStrategyOutput {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 522,
      "content": "return (timelines as any)[level] || 37;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/hiring/recruitment-strategist.ts",
      "line": 1,
      "content": "// import { ThreeEngineAgent } from '../base/three-engine-agent.js';",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/learning-path-designer.test.ts",
      "line": 269,
      "content": "const mockReasoningOutput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/learning-path-designer.test.ts",
      "line": 20,
      "content": "let mockInputData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/learning-progress-tracker.test.ts",
      "line": 338,
      "content": "const mockReasoningOutput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/learning-progress-tracker.test.ts",
      "line": 20,
      "content": "let mockInputData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/scenario-game-engine.test.ts",
      "line": 355,
      "content": "const mockReasoningOutput = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/scenario-game-engine.test.ts",
      "line": 20,
      "content": "let mockInputData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/setup.ts",
      "line": 117,
      "content": "export const mockAIResponse = (response) => {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/setup.ts",
      "line": 155,
      "content": "export const mockThreeEngineAgent = () => ({",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/__tests__/setup.ts",
      "line": 175,
      "content": "export const mockMultiProviderManager = () => ({",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 170,
      "content": "protected buildKnowledgePrompt(inputData: LearningPathDesignInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 198,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 305,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 330,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 362,
      "content": "knowledgeOutput: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 363,
      "content": "dataOutput: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 546,
      "content": "validateLearningPath(learningPath: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 555,
      "content": "private analyzeLearningStyle(learningHistory: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 576,
      "content": "private calculateLearningPace(learningHistory: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 621,
      "content": "private analyzeSkillGaps(currentSkills: string[], skillGaps: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 637,
      "content": "courseSkills.some((skill: any) => skill.toLowerCase().includes(gap.toLowerCase()))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 654,
      "content": "private calculateRelevance(course: any, skillGaps: string[], preferredFormats: string[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 660,
      "content": "courseSkills.some((skill: any) => skill.toLowerCase().includes(gap.toLowerCase()))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 677,
      "content": "private mapCourseDependencies(availableCourses: any[], currentSkills: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 682,
      "content": "const canTake = prerequisites.every((prereq: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 689,
      "content": "missingPrerequisites: prerequisites.filter((prereq: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 698,
      "content": "private analyzeOrganizationalAlignment(organizationalContext: any, employeeProfile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 723,
      "content": "private calculateEngagementLevel(learningHistory: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 733,
      "content": "private calculateCompletionRate(learningHistory: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 752,
      "content": "private createDifficultyProgression(courses: any[]): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 759,
      "content": "private estimateCourseTimes(courses: any[], learningPace: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 769,
      "content": "private assessBusinessImpact(skillGaps: string[], organizationalContext: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 793,
      "content": "private analyzeTriggerImplications(triggerType: string, triggerData: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 613,
      "content": "const aRate = (a as any).completed / (a as any).total;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 614,
      "content": "const bRate = (b as any).completed / (b as any).total;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 686,
      "content": "(dependencies as any)[course.id] = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 749,
      "content": "return (roleResponsibilities as any)[role.toLowerCase()] || ['general responsibilities'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 755,
      "content": "return (difficultyOrder as any)[a.level] - (difficultyOrder as any)[b.level];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 761,
      "content": "const multiplier = (paceMultiplier as any)[learningPace];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-path-designer.ts",
      "line": 790,
      "content": "return (urgencyMap as any)[triggerType] || 'medium';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 24,
      "content": "competencyLevels: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 209,
      "content": "protected buildKnowledgePrompt(inputData: LearningProgressInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 239,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 313,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 341,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 374,
      "content": "knowledgeOutput: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 375,
      "content": "dataOutput: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 536,
      "content": "async trackCourseProgress(employeeId: string, courseId: string, progressData: any): Promise<LearningProgressOutput> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 553,
      "content": "async trackPathProgress(employeeId: string, learningPathId: string, progressData: any): Promise<LearningProgressOutput> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 570,
      "content": "async analyzeInterventionNeeds(employeeId: string, progressData: any): Promise<LearningProgressOutput> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 586,
      "content": "async predictCompletion(employeeId: string, learningPathId: string, progressData: any): Promise<LearningProgressOutput> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 603,
      "content": "validateProgressAnalysis(analysis: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 612,
      "content": "private calculateProgressMetrics(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 617,
      "content": "const completedCourses = completions.filter((c: any) => c.status === 'completed').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 618,
      "content": "const inProgressCourses = enrollments.filter((e: any) => e.status === 'in_progress').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 641,
      "content": "private analyzeSkillDevelopment(progressData: any, employeeProfile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 647,
      "content": ".filter((c: any) => c.status === 'completed' && c.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 648,
      "content": ".flatMap((c: any) => c.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 649,
      "content": ".filter((skill: any, index: any, arr: any) => arr.indexOf(skill) === index); // Remove duplicates",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 653,
      "content": "?.filter((e: any) => e.status === 'in_progress' && e.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 654,
      "content": ".flatMap((e: any) => e.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 655,
      "content": ".filter((skill: any, index: any, arr: any) => arr.indexOf(skill) === index) || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 659,
      "content": ".filter((a: any) => a.score < 70 && a.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 660,
      "content": ".flatMap((a: any) => a.skills)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 661,
      "content": ".filter((skill: any, index: any, arr: any) => arr.indexOf(skill) === index);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 677,
      "content": "private analyzeTimePatterns(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 681,
      "content": "const totalTimeSpent = timeSpent.reduce((sum: any, t: any) => sum + (t.duration || 0), 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 704,
      "content": "private analyzePerformanceTrends(progressData: any, employeeProfile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 710,
      "content": ".sort((a: any, b: any) => new Date(a.date).getTime() - new Date(b.date).getTime())",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 711,
      "content": ".map((a: any) => ({ date: a.date, score: a.score, skills: a.skills }));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 722,
      "content": "const declineAreas: any[] = this.identifyDeclineAreas(performanceHistory);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 736,
      "content": "private analyzeEngagement(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 762,
      "content": "private analyzeLearningVelocity(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 788,
      "content": "private analyzeRiskFactors(progressData: any, employeeProfile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 807,
      "content": "? assessments.reduce((sum: any, a: any) => sum + a.score, 0) / assessments.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 828,
      "content": "private generatePredictiveIndicators(progressData: any, employeeProfile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 855,
      "content": "private calculateEngagementScore(progressData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 863,
      "content": "? timeSpent.reduce((sum: any, t: any) => sum + t.duration, 0) / timeSpent.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 867,
      "content": "? engagementMetrics.reduce((sum: any, e: any) => sum + e.interactions, 0) / engagementMetrics.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 877,
      "content": "private calculateLearningVelocity(completions: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 884,
      "content": "const sortedCompletions = completedCourses.sort((a: any, b: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 897,
      "content": "private calculateCompetencyLevels(assessments: any[], skillsAcquired: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 898,
      "content": "const competencyLevels: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 901,
      "content": "const skillAssessments = assessments.filter((a: any) => a.skills?.includes(skill));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 907,
      "content": "const avgScore = skillAssessments.reduce((sum: any, a) => sum + a.score, 0) / skillAssessments.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 918,
      "content": "private calculateTimeEfficiency(completions: any[], timeSpent: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 921,
      "content": "const totalActualTime = timeSpent.reduce((sum: any, t) => sum + t.duration, 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 922,
      "content": "const totalExpectedTime = completions.reduce((sum: any, c) => sum + (c.expectedDuration || 120), 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 927,
      "content": "private identifyOptimalLearningTimes(timeSpent: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 930,
      "content": "const hourCounts: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 949,
      "content": "private calculateTrendDirection(performanceHistory: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 957,
      "content": "const recentAvg = recent.reduce((sum: any, p) => sum + p.score, 0) / recent.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 958,
      "content": "const olderAvg = older.reduce((sum: any, p) => sum + p.score, 0) / older.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 967,
      "content": "private identifyImprovementAreas(assessments: any[], employeeProfile: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 968,
      "content": "const lowScores = assessments.filter((a: any) => a.score < 70);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 972,
      "content": "private identifyStrengths(assessments: any[], employeeProfile: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 973,
      "content": "const highScores = assessments.filter((a: any) => a.score >= 85);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 977,
      "content": "private identifyDeclineAreas(performanceHistory: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 979,
      "content": "const declineAreas: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 984,
      "content": "private calculateDropoutRisk(progressData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 996,
      "content": "private predictCompletionLikelihood(progressData: any, employeeProfile: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1005,
      "content": "private predictSuccessProbability(assessments: any[], employeeProfile: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1008,
      "content": "const avgScore = assessments.reduce((sum: any, a) => sum + a.score, 0) / assessments.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1012,
      "content": "private predictEngagement(engagementMetrics: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1016,
      "content": "const avgEngagement = recentEngagement.reduce((sum: any, e) => sum + e.score, 0) / recentEngagement.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1020,
      "content": "private estimateCompletionDate(completions: any[], enrollments: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1033,
      "content": "private assessDataQuality(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1034,
      "content": "const dataPoints = Object.values(progressData).reduce((sum: any, arr) => (sum as number) + (Array.isArray(arr) ? arr.length : 0), 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1050,
      "content": "private analyzeSkillProgression(assessments: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1055,
      "content": "private analyzeTimeDistribution(timeSpent: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1060,
      "content": "private calculateTimeConsistency(timeSpent: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1065,
      "content": "private identifyPeakLearningHours(timeSpent: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1069,
      "content": "private calculatePerformanceVolatility(performanceHistory: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1073,
      "content": "const mean = scores.reduce((sum: any, score) => sum + score, 0) / scores.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1074,
      "content": "const variance = scores.reduce((sum: any, score) => sum + Math.pow(score - mean, 2), 0) / scores.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1079,
      "content": "private calculateConsistencyScore(performanceHistory: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1084,
      "content": "private calculateRecentPerformance(performanceHistory: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1088,
      "content": "return recent.reduce((sum: any, p) => sum + p.score, 0) / recent.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1091,
      "content": "private analyzeEngagementPatterns(engagementMetrics: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1095,
      "content": "private analyzeEngagementTrends(engagementMetrics: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1099,
      "content": "private calculateInteractionFrequency(engagementMetrics: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1101,
      "content": "return engagementMetrics.reduce((sum: any, e) => sum + e.interactions, 0) / engagementMetrics.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1104,
      "content": "private calculateEngagementConsistency(engagementMetrics: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1108,
      "content": "private identifyMotivationIndicators(engagementMetrics: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1112,
      "content": "private analyzeVelocityTrends(completions: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1116,
      "content": "private calculateAcceleration(completions: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1120,
      "content": "private predictFutureVelocity(completions: any[], trends: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1125,
      "content": "private calculateVelocityConsistency(completions: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1129,
      "content": "private calculateOptimalVelocity(enrollments: any[], completions: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1147,
      "content": "private analyzeRiskTrends(progressData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1151,
      "content": "private calculatePredictionConfidence(progressData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/learning-progress-tracker.ts",
      "line": 1156,
      "content": "private identifyKeyPredictors(progressData: any, employeeProfile: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 23,
      "content": "surveyResponses?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 24,
      "content": "skillsAnalysis?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 25,
      "content": "performanceResults?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 33,
      "content": "preferences: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 40,
      "content": "departmentNeeds: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 93,
      "content": "skillImpact: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 110,
      "content": "thresholds: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 121,
      "content": "adaptationFactors: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 126,
      "content": "learningPathIntegration: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 127,
      "content": "skillMapping: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 128,
      "content": "progressTracking: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 377,
      "content": "protected buildKnowledgePrompt(inputData: ScenarioGameInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 416,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 490,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 518,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 555,
      "content": "knowledgeOutput: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 556,
      "content": "dataOutput: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 886,
      "content": "inputData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 911,
      "content": "inputData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 957,
      "content": "validateScenarioGame(game: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 967,
      "content": "private analyzeEmployeeProfile(profile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 983,
      "content": "private analyzeLearningPreferences(preferences: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 997,
      "content": "private analyzeSkillProfile(profile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1009,
      "content": "private analyzeExperienceLevel(experience: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1021,
      "content": "private analyzeMotivationFactors(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1032,
      "content": "private analyzeLearningStyle(learningStyle: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1060,
      "content": "private processSurveyData(surveyResponses: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1076,
      "content": "private processSkillsData(skillsAnalysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1091,
      "content": "private processPerformanceData(performanceResults: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1106,
      "content": "private processCultureData(cultureValues: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1119,
      "content": "private analyzeTriggerContext(triggerType: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1157,
      "content": "private analyzeOrganizationalContext(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1170,
      "content": "private analyzeRoleContext(role: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1201,
      "content": "private analyzeIndustryContext(industry: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1233,
      "content": "private calculateOptimalDifficulty(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1246,
      "content": "private analyzeContentPreferences(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1256,
      "content": "private analyzeInteractionPreferences(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1265,
      "content": "private analyzeFeedbackPreferences(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1275,
      "content": "private calculateScenarioRelevance(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1285,
      "content": "private analyzeCharacterPreferences(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1294,
      "content": "private analyzeNarrativeStyle(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1303,
      "content": "private calculateChallengeLevel(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1312,
      "content": "private optimizeGameDuration(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1321,
      "content": "private customizeAssessment(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1339,
      "content": "private analyzeLearningHistory(profile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1348,
      "content": "private analyzePerformancePatterns(profile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1357,
      "content": "private calculateSkillLevels(currentSkills: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1358,
      "content": "return currentSkills.reduce((levels: any, skill) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1368,
      "content": "private categorizeSkills(skills: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1369,
      "content": "const categories: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1394,
      "content": "private analyzeSkillDevelopment(profile: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1403,
      "content": "private identifyCompetencyAreas(profile: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1408,
      "content": "private analyzeIntrinsicMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1416,
      "content": "private analyzeExtrinsicMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1424,
      "content": "private analyzeSocialMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1432,
      "content": "private analyzeAchievementMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1440,
      "content": "private analyzeLearningMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1448,
      "content": "private analyzeCareerMotivation(triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1457,
      "content": "private calculateEngagementLevel(surveyResponses: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1461,
      "content": "private calculateSatisfactionScore(surveyResponses: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1465,
      "content": "private extractMotivationFactors(surveyResponses: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1469,
      "content": "private extractPreferences(surveyResponses: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1473,
      "content": "private extractConcerns(surveyResponses: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1477,
      "content": "private extractInterests(surveyResponses: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1481,
      "content": "private analyzeCommunicationStyle(surveyResponses: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1485,
      "content": "private analyzeWorkStyle(surveyResponses: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1490,
      "content": "private identifyLearningNeeds(skillsAnalysis: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1494,
      "content": "private analyzeSkillProgression(skillsAnalysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1499,
      "content": "private analyzePerformanceTrends(performanceResults: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1503,
      "content": "private extractPerformanceGoals(performanceResults: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1507,
      "content": "private processPerformanceFeedback(performanceResults: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1512,
      "content": "private analyzeValueAlignment(cultureValues: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1520,
      "content": "private analyzeCulturalPreferences(cultureValues: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1537,
      "content": "private analyzeOrganizationalStructure(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1545,
      "content": "private analyzeCommunicationCulture(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1553,
      "content": "private analyzeLearningCulture(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1561,
      "content": "private analyzeInnovationLevel(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1565,
      "content": "private analyzeTeamContext(department: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1573,
      "content": "private analyzeCulturalContext(cultureValues: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1582,
      "content": "private analyzeSkillLevel(currentSkills: string[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1590,
      "content": "private analyzePerformanceLevel(performanceResults: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1598,
      "content": "private adjustDifficultyLevel(experienceLevel: any, skillLevel: any, performanceLevel: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1605,
      "content": "private explainDifficultyAdjustment(experienceLevel: any, skillLevel: any, performanceLevel: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1609,
      "content": "private calculateAdaptiveRange(experienceLevel: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1656,
      "content": "private determineInteractionFrequency(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1674,
      "content": "private determineFeedbackPreference(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1678,
      "content": "private determineFeedbackTiming(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1707,
      "content": "private calculateContextRelevance(context: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1730,
      "content": "private determinePersonalityTraits(preferences: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1738,
      "content": "private determineCharacterDiversity(context: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1766,
      "content": "private determineNarrativeEngagement(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1770,
      "content": "private calculateAdaptiveChallenge(inputData: ScenarioGameInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1804,
      "content": "private calculateDurationFlexibility(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1826,
      "content": "private determineAssessmentFrequency(preferences: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1839,
      "content": "private calculateAutonomyMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1843,
      "content": "private calculateMasteryMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1847,
      "content": "private calculatePurposeMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1851,
      "content": "private calculateRewardMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1855,
      "content": "private calculateRecognitionMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1859,
      "content": "private calculateAdvancementMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1863,
      "content": "private calculateCollaborationMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1867,
      "content": "private calculateCompetitionMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1871,
      "content": "private calculateBelongingMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1875,
      "content": "private calculateGoalOrientation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1879,
      "content": "private calculatePerformanceOrientation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1883,
      "content": "private calculateMasteryOrientation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1887,
      "content": "private calculateCuriosityMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1891,
      "content": "private calculateGrowthMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1895,
      "content": "private calculateChallengeMotivation(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1899,
      "content": "private calculateCareerAdvancement(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1903,
      "content": "private calculateCareerDevelopment(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1907,
      "content": "private calculateCareerSecurity(triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1911,
      "content": "private analyzeEngagementPreferences(preferences: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 892,
      "content": "gameType: gameType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 917,
      "content": "gameType: gameType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1018,
      "content": "return (experienceLevels as any)[experience.toLowerCase()] || experienceLevels['mid'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1056,
      "content": "return (styles as any)[learningStyle.toLowerCase()] || styles['visual'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1153,
      "content": "return (triggerContexts as any)[triggerType] || triggerContexts['skills_gap'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1194,
      "content": "return (roleContexts as any)[role.toLowerCase()] || {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1225,
      "content": "return (industryContexts as any)[industry.toLowerCase()] || {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1361,
      "content": "}, {} as any);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1624,
      "content": "return (formatMap as any)[learningStyle.toLowerCase()] || 'interactive_visual';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1635,
      "content": "return (complexityMap as any)[experience.toLowerCase()] || 'medium';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1667,
      "content": "return (typeMap as any)[learningStyle.toLowerCase()] || 'visual_selection';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1727,
      "content": "return (characterMap as any)[role.toLowerCase()] || ['colleague', 'stakeholder', 'client'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1759,
      "content": "return (structureMap as any)[gameType] || 'three_act';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1786,
      "content": "return (rateMap as any)[experience.toLowerCase()] || 'medium';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1797,
      "content": "return (supportMap as any)[experience.toLowerCase()] || 'medium';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/lxp/scenario-game-engine.ts",
      "line": 1823,
      "content": "return (assessmentMap as any)[gameType] || 'formative';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/goal-setter.test.ts",
      "line": 66,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/goal-setter.test.ts",
      "line": 153,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/goal-setter.test.ts",
      "line": 265,
      "content": "const invalidContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/goal-setter.test.ts",
      "line": 277,
      "content": "const incompleteContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-analyzer.test.ts",
      "line": 54,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-analyzer.test.ts",
      "line": 184,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-analyzer.test.ts",
      "line": 312,
      "content": "const invalidContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-analyzer.test.ts",
      "line": 322,
      "content": "const invalidContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-coach.test.ts",
      "line": 59,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-coach.test.ts",
      "line": 149,
      "content": "const mockContext = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-coach.test.ts",
      "line": 335,
      "content": "const invalidContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/__tests__/performance-coach.test.ts",
      "line": 347,
      "content": "const incompleteContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 980,
      "content": "overall: 0.8, // Placeholder - would be calculated based on actual alignment",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 675,
      "content": "protected buildReasoningPrompt(data: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 731,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 747,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 767,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 791,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 817,
      "content": "protected parseReasoningOutput(output: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 909,
      "content": "private analyzePerformancePatterns(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 976,
      "content": "private assessAlignmentPotential(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 990,
      "content": "private analyzeEmployeeCapabilities(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 1038,
      "content": "private analyzeRoleRequirements(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 1087,
      "content": "private analyzeHistoricalPerformance(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 1146,
      "content": "private analyzeConstraints(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 1181,
      "content": "private analyzePerformanceTrends(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 1227,
      "content": "private assessGoalSettingRisks(context: GoalSettingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 856,
      "content": "currentGoal.category = trimmedLine.replace('CATEGORY:', '').trim() as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 858,
      "content": "currentGoal.type = trimmedLine.replace('TYPE:', '').trim() as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/goal-setter.ts",
      "line": 860,
      "content": "currentGoal.format = trimmedLine.replace('FORMAT:', '').trim() as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 6,
      "content": "let DEFAULT_VALUES_FRAMEWORK: any = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 91,
      "content": "historicalData?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 93,
      "content": "industryBenchmarks?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 94,
      "content": "teamStructure?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 156,
      "content": "- Critical bottlenecks: ${bottlenecks.filter((b: any) => b.severity === \"critical\").length}`,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 221,
      "content": "historicalData?: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 291,
      "content": ".filter((s: any) => s.trim().length > 10)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 293,
      "content": ".map((driver: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 307,
      "content": "teamStructure?: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 452,
      "content": "historicalData?: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 519,
      "content": "const criticalBottlenecks = bottlenecks.filter((b: any) => b.severity === \"critical\");",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 616,
      "content": "const criticalBottlenecks = bottlenecks.filter((b: any) => b.severity === \"critical\");",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 707,
      "content": "for (const bottleneck of bottlenecks.filter((b: any) => b.severity === \"critical\")) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-agent.ts",
      "line": 874,
      "content": "const critical = bottlenecks.filter((b: any) => b.severity === \"critical\");",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1614,
      "content": "departmentAverage: 3.5, // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1615,
      "content": "teamAverage: 3.7, // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1616,
      "content": "percentile: 75 // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1619,
      "content": "industryAverage: 3.4, // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1620,
      "content": "marketAverage: 3.6, // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1621,
      "content": "gap: 0.1 // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 371,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 392,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 415,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 438,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1050,
      "content": "protected buildReasoningPrompt(data: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1052,
      "content": "? (data.performance.reviews.reduce((sum: any, r: any) => sum + r.overallRating, 0) / data.performance.reviews.length).toFixed(2)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1055,
      "content": "const completedGoals = data.performance.goals.filter((g: any) => g.status === 'completed').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1077,
      "content": "- Improvement Plans: ${data.performance.improvementPlans.length} plans (${data.performance.improvementPlans.filter((p: any) => p.status === 'active').length} active)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1551,
      "content": "private analyzePerformanceData(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1557,
      "content": "completedGoals: performanceData.goals.filter((g: any) => g.status === 'completed').length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1558,
      "content": "averageProgress: performanceData.goals.reduce((sum: any, g) => sum + g.currentProgress, 0) / performanceData.goals.length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1559,
      "content": "achievementRate: performanceData.goals.reduce((sum: any, g) => sum + g.achievementRate, 0) / performanceData.goals.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1563,
      "content": "averageRating: performanceData.reviews.reduce((sum: any, r: any) => sum + r.overallRating, 0) / performanceData.reviews.length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1568,
      "content": "averageRating: performanceData.feedback.reduce((sum: any, f) => sum + f.rating, 0) / performanceData.feedback.length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1574,
      "content": "private analyzePerformanceTrends(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1585,
      "content": "private assessPerformanceRisks(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1595,
      "content": "const lowAchievementGoals = performanceData.goals.filter((g: any) => g.achievementRate < 70);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1609,
      "content": "private performBenchmarking(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1626,
      "content": "private generateInsights(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1637,
      "content": "const highPerformingGoals = performanceData.goals.filter((g: any) => g.achievementRate >= 90);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1654,
      "content": "private analyzeCompetencyData(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1670,
      "content": "competencyAnalysis.overallCompetencyScore = Object.values(latestReview.competencyRatings).reduce((sum: any, rating) => sum + rating, 0) / Object.keys(latestReview.competencyRatings).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1696,
      "content": "private analyzeBehavioralData(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1711,
      "content": "behavioralAnalysis.overallBehaviorScore = Object.values(latestReview.behaviorRatings).reduce((sum: any, rating) => sum + rating, 0) / Object.keys(latestReview.behaviorRatings).length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1736,
      "content": "private analyzeFeedbackData(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1756,
      "content": "feedbackAnalysis.averageRating = performanceData.feedback.reduce((sum: any, f) => sum + f.rating, 0) / performanceData.feedback.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1790,
      "content": "private analyzeImprovementData(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1811,
      "content": "improvementAnalysis.averageProgress = performanceData.improvementPlans.reduce((sum: any, p) => sum + p.progress, 0) / performanceData.improvementPlans.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1829,
      "content": "private performAttributionAnalysis(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1843,
      "content": "const highPerformingGoals = performanceData.goals.filter((g: any) => g.achievementRate >= 90);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1871,
      "content": "private performCorrelationAnalysis(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1884,
      "content": "const avgGoalAchievement = performanceData.goals.reduce((sum: any, g) => sum + g.achievementRate, 0) / performanceData.goals.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1891,
      "content": "const avgFeedbackRating = performanceData.feedback.reduce((sum: any, f) => sum + f.rating, 0) / performanceData.feedback.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1902,
      "content": "private performPredictiveAnalysis(context: PerformanceAnalysisContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1919,
      "content": "const avgRecentPerformance = recentPerformance.reduce((sum: any, p) => sum + p.overallScore, 0) / recentPerformance.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-analyzer.ts",
      "line": 1948,
      "content": "const avgRating = performanceData.reviews.reduce((sum: any, r: any) => sum + r.overallRating, 0) / performanceData.reviews.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 800,
      "content": "autonomy: 0.7, // Placeholder - would be assessed from data",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 328,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 350,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 373,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 396,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 664,
      "content": "private performGapAnalysis(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 703,
      "content": "private assessReadiness(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 759,
      "content": "private analyzeStrengths(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 779,
      "content": "private identifyDevelopmentOpportunities(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 795,
      "content": "private analyzeMotivation(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 819,
      "content": "private analyzeCareerAspirations(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 835,
      "content": "private analyzeLearningStyle(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 850,
      "content": "private assessChangeReadiness(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 866,
      "content": "private analyzeSupportSystem(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 882,
      "content": "private assessResourceAvailability(context: PerformanceCoachingContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 899,
      "content": "protected buildReasoningPrompt(data: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 678,
      "content": "const currentLevel = (currentLevelMap as any)[currentState.performanceLevel] || 3;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance/performance-coach.ts",
      "line": 679,
      "content": "const targetLevel = (currentLevelMap as any)[desiredOutcomes.targetPerformanceLevel] || 4;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 52,
      "content": "protected async processData(inputData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 91,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 103,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 116,
      "content": "protected buildReasoningPrompt(inputData: any, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 131,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 144,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 157,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 291,
      "content": "async executeReasoningEngine(knowledgeResult: any, dataResult: any): Promise<PerformanceResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 334,
      "content": "private calculatePerformanceMetrics(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 355,
      "content": "private calculateProductivityScore(reviews: any[], kpis: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 367,
      "content": "private calculateQualityScore(reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 379,
      "content": "private calculateEfficiencyScore(reviews: any[], kpis: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 391,
      "content": "private calculateInnovationScore(reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 403,
      "content": "private calculateGoalAchievementScore(okrs: any[], kpis: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 426,
      "content": "private calculateCollaborationScore(reviews: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 438,
      "content": "private analyzeTrends(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 444,
      "content": "reviews.forEach((review: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 456,
      "content": "const avgScore = periodReviews.reduce((sum: number, r: any) => sum + (r.overallRating || 0), 0) / periodReviews.length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 463,
      "content": ".filter((kpi: any) => kpi.category === 'quality')",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 464,
      "content": ".map((kpi: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 472,
      "content": "? okrData.map((okr: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 485,
      "content": "private identifyTopPerformers(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 503,
      "content": "reviews.forEach((review: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 506,
      "content": "const employee = employees?.find((e: any) => e.id === empId);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 523,
      "content": "goals.forEach((goal: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 533,
      "content": "okrData.forEach((okr: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 560,
      "content": "private generateAchievements(emp: any, reviews: any[], goals: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 564,
      "content": "const empReviews = reviews.filter((r: any) => r.employeeId === emp.employeeId);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 573,
      "content": "const empGoals = goals?.filter((g: any) => g.employeeId === emp.employeeId) || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 574,
      "content": "const completedGoals = empGoals.filter((g: any) => g.status === 'completed').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 592,
      "content": "private identifyImprovementAreas(dataResult: any, knowledgeResult: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 594,
      "content": "const areas: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 653,
      "content": "private calculateOverallScore(metrics: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 669,
      "content": "private generateInsights(metrics: any, trends: any, dataResult: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 701,
      "content": "private generateRecommendations(metrics: any, improvementAreas: any[], knowledgeResult: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 730,
      "content": "private identifyRiskAreas(metrics: any, trends: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 744,
      "content": "const isDecreasing = recent.every((curr: any, idx: any) => idx === 0 || curr.value < recent[idx - 1].value);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/performance-agent.ts",
      "line": 753,
      "content": "private assessDataQuality(reviews: any[], kpis: any[], okrs: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 6,
      "content": "let DEFAULT_VALUES_FRAMEWORK: any = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 86,
      "content": "surveyData?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 87,
      "content": "recognitionData?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 189,
      "content": "function analyzeRecognitionChannels(surveyData?: any, recognitionData?: any): RecognitionChannels {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 217,
      "content": "const peerEvents = recognitionData.events.filter((e: any) => e.type === 'peer').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 218,
      "content": "const managerEvents = recognitionData.events.filter((e: any) => e.type === 'manager').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 227,
      "content": "function analyzeFrequency(recognitionData?: any): RecognitionFrequency {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 248,
      "content": "events.forEach((event: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 546,
      "content": "gapsAnalysis: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 635,
      "content": "gapsAnalysis: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 661,
      "content": ".map((s: any) => s.trim())",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 662,
      "content": ".filter((s: any) => s.length > 20)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 675,
      "content": "gapsAnalysis: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition/recognition-agent.ts",
      "line": 679,
      "content": "aiSuggestions: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 265,
      "content": "async executeReasoningEngine(knowledgeResult: any, dataResult: any): Promise<RecognitionResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 317,
      "content": "private extractRecognitionData(reviews: any[], employees: any[], assessments: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 352,
      "content": "private calculateRecognitionMetrics(dataResult: any, knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 366,
      "content": "private calculateFrequencyScore(events: any[], employeeCount: number): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 380,
      "content": "private calculateMeaningfulnessScore(events: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 387,
      "content": "private calculateTimelinessScore(events: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 394,
      "content": "private calculateFairnessScore(events: any[], employees: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 398,
      "content": "const recognitionCounts = events.reduce((acc: any, event: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 415,
      "content": "private calculateVisibilityScore(events: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 422,
      "content": "private calculateDiversityScore(events: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 425,
      "content": "const typeDistribution = events.reduce((acc: any, event: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 436,
      "content": "private analyzeRecognitionTypes(dataResult: any): {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 446,
      "content": "const typeAnalysis = events.reduce((acc: any, event: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 476,
      "content": "private analyzeRecognitionImpact(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 488,
      "content": "private calculateEngagementImpact(recognitionData: any, assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 495,
      "content": "private calculatePerformanceImpact(recognitionData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 502,
      "content": "private calculateRetentionImpact(recognitionData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 509,
      "content": "private calculateMotivationImpact(recognitionData: any, assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 523,
      "content": "private performGapAnalysis(dataResult: any, knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 536,
      "content": "const recognitionCounts = events.reduce((acc: any, event: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 556,
      "content": "private identifyRecognitionBias(employees: any[], recognitionData: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 579,
      "content": "private analyzeTrends(dataResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 600,
      "content": "private calculateBenchmarks(metrics: any, knowledgeResult: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 612,
      "content": "private calculateOverallScore(metrics: any, knowledgeResult: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 623,
      "content": "private generateInsights(metrics: any, gapAnalysis: any, impactAnalysis: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 663,
      "content": "private generateRecommendations(metrics: any, gapAnalysis: any, knowledgeResult: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 708,
      "content": "private createActionPlan(recommendations: string[], gapAnalysis: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 767,
      "content": "private calculateRecognitionSatisfaction(assessments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 780,
      "content": "private calculateRecognitionFrequency(events: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 789,
      "content": "private calculateParticipation(events: any[], employees: any[]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 800,
      "content": "private assessDataQuality(reviews: any[], employees: any[]): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 813,
      "content": "protected async processData(inputData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 829,
      "content": "protected buildKnowledgePrompt(inputData: any, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 833,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 837,
      "content": "protected buildReasoningPrompt(inputData: any, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 841,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 845,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/recognition-agent.ts",
      "line": 849,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 17,
      "content": "// import * as pdfParse from \"pdf-parse\";  // TODO: Install pdf-parse package",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 480,
      "content": "// TODO: Implement organizationStrategies table",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 18,
      "content": "const pdfParse: any = null;  // Placeholder",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 18,
      "content": "const pdfParse: any = null;  // Placeholder",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 158,
      "content": "private async extractEmployeeSkills(employees: any[]): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 260,
      "content": "structure: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 321,
      "content": "currentSkills: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 322,
      "content": "requiredSkills: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 324,
      "content": "structure: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 374,
      "content": "alignment: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 375,
      "content": "currentSkills: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 376,
      "content": "requiredSkills: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 430,
      "content": "private generateLXPTriggers(alignment: any, currentSkills: any[], tenantId: string): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 435,
      "content": "alignment.criticalGaps.forEach((gap: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 460,
      "content": "private mergeSkillExtractions(extractions: any[]): EmployeeProfile {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 483,
      "content": "//   orderBy: (strategies: any, { desc }: any) => [desc(strategies.createdAt)]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 489,
      "content": "private aggregateSkillsInventory(skills: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 491,
      "content": "const inventory: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 494,
      "content": "employee.skills?.forEach((skill: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 511,
      "content": "private calculateCompetencyLevels(skills: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 520,
      "content": "private identifyEmployeesForSkill(skillGap: any, employees: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 525,
      "content": "const hasSkill = emp.skills?.find((s: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 533,
      "content": "private synthesizeRequiredSkills(analyses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 542,
      "content": "private aggregateAlignmentAnalysis(analyses: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 558,
      "content": "private async saveSkillsAnalysis(report: any, tenantId: string): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 481,
      "content": "// const strategy = await db.query.organizationStrategies.findFirst({",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/agents/skills/skills-agent.ts",
      "line": 17,
      "content": "// import * as pdfParse from \"pdf-parse\";  // TODO: Install pdf-parse package",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 91,
      "content": "onetFramework: taxonomies.find((t: any) => t.source === 'O*NET'),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 335,
      "content": "protected buildKnowledgePrompt(inputData: SkillsAnalysisInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 349,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 368,
      "content": "protected buildReasoningPrompt(inputData: SkillsAnalysisInput, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 390,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 399,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 408,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 417,
      "content": "private aggregateCurrentSkills(employeeSkillsData: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 434,
      "content": "const result: { [skill: string]: any } = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 447,
      "content": "private calculateSkillDistribution(employeeSkillsData: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 465,
      "content": "private aggregateCertifications(employeeSkillsData: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 479,
      "content": "private aggregateExperience(employeeSkillsData: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 525,
      "content": "private async storeAnalysis(input: SkillsAnalysisInput, result: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 549,
      "content": "experience: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 550,
      "content": "education: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 551,
      "content": "certifications: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 623,
      "content": "private fallbackSkillsExtraction(resumeText: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 665,
      "content": "strategy: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 667,
      "content": "organizationalSkills: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 668,
      "content": "departmentalSkills: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 669,
      "content": "roleSkills: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 736,
      "content": "employeeProfile: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 737,
      "content": "requiredSkills: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 741,
      "content": "criticalGaps: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 742,
      "content": "moderateGaps: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 743,
      "content": "strengthAreas: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 744,
      "content": "trainingRecommendations: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 750,
      "content": "const currentTechnical = (employeeProfile.technicalSkills || []).map((s: any) => s.skill.toLowerCase());",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 839,
      "content": "? Math.round(((roleSkills.length - moderateGaps.filter((g: any) => roleSkills.includes(g.skill)).length) / roleSkills.length) * 100)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/skills-agent.ts",
      "line": 262,
      "content": "const strategyObj = strategyData ? (strategyData.objectives as any) : {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 188,
      "content": "protected buildKnowledgePrompt(inputData: SocialMediaInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 199,
      "content": "${frameworks.mizanFramework.map((cyl: any, idx: number) => `",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 203,
      "content": "Positive Values: ${cyl.positiveValues.map((v: any) => v.name).join(', ')}",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 212,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 234,
      "content": "protected buildReasoningPrompt(inputData: SocialMediaInput, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 275,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 301,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 332,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 365,
      "content": "private getPlatformSpecifications(platform: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/social-media-agent.ts",
      "line": 420,
      "content": "private getIndustryStats(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 72,
      "content": "protected async processData(inputData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 90,
      "content": "protected parseKnowledgeOutput(output: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 94,
      "content": "protected parseDataOutput(output: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 98,
      "content": "protected parseReasoningOutput(output: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 102,
      "content": "protected buildKnowledgePrompt(inputData: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 106,
      "content": "protected buildDataPrompt(inputData: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 110,
      "content": "protected buildReasoningPrompt(inputData: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 114,
      "content": "protected getKnowledgeBase(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 263,
      "content": "departments: departmentsData.map((d: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 270,
      "content": "totalEmployees: departmentsData.reduce((sum: number, d: any) => sum + (d.users?.length || 0), 0)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 276,
      "content": "private async identifyStructureType(departments: any[]): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 290,
      "content": "private calculateOrganizationalLevels(departments: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 291,
      "content": "return Math.max(...departments.map((d: any) => d.level || 1));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure/structure-agent.ts",
      "line": 303,
      "content": "private async triggerHiringModule(hiringNeeds: any[], tenantId: string): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 90,
      "content": "structureData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 91,
      "content": "strategyData?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 448,
      "content": "protected buildKnowledgePrompt(inputData: StructureAnalysisInput, frameworks: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 462,
      "content": "protected buildDataPrompt(processedData: any, knowledgeOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 481,
      "content": "protected buildReasoningPrompt(inputData: StructureAnalysisInput, knowledgeOutput: any, dataOutput: any): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 503,
      "content": "protected parseKnowledgeOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 512,
      "content": "protected parseDataOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 521,
      "content": "protected parseReasoningOutput(response: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 530,
      "content": "private analyzeStructureData(structureData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 550,
      "content": "private extractRoles(structureData: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 565,
      "content": "private calculateSpanMetrics(roles: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/agents/structure-agent.ts",
      "line": 588,
      "content": "private calculateLayerMetrics(roles: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/ai/multi-provider-manager.ts",
      "line": 183,
      "content": "// TODO: Implement actual streaming when router supports it",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/ai-providers/ensemble.ts",
      "line": 1,
      "content": "// import { AIProviderKey } from \"@mizan/shared/schema\";",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/ai-providers/router.ts",
      "line": 20,
      "content": "response: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/ai-providers/types.ts",
      "line": 1,
      "content": "// import { AIProviderKey } from \"@mizan/shared/schema\";",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/data/seed.ts",
      "line": 2,
      "content": "type Tenant = any; // TODO: Define proper types based on schema",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/data/seed.ts",
      "line": 1,
      "content": "// Import types from local schema instead of non-existent @mizan/shared/schema",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 3,
      "content": "type Tenant = any; // TODO: Define proper types based on schema",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 41,
      "content": "valuesFramework: input.valuesFramework.map((cylinder: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 43,
      "content": "enablingValues: cylinder.enablingValues.map((value: any) => ({ ...value })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 44,
      "content": "limitingValues: cylinder.limitingValues.map((value: any) => ({ ...value })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 57,
      "content": "assignments: item.assignments.map((assignment: any) => ({ ...assignment })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 135,
      "content": "assignments: progress.assignments.map((assignment: any) => ({ ...assignment })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 144,
      "content": "assignments: record.assignments.map((assignment: any) => ({ ...assignment })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 149,
      "content": "assignments: record.assignments.map((assignment: any) => ({ ...assignment })),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/data/store.ts",
      "line": 2,
      "content": "// Import types from local schema instead of non-existent @mizan/shared/schema",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/email.ts",
      "line": 54,
      "content": "const templates: Record<string, (data: any) => EmailTemplate> = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/lxp/pipeline.ts",
      "line": 17,
      "content": "results?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/lxp/pipeline.ts",
      "line": 148,
      "content": "private async assessLearningNeeds(employee: any, talentProfile: any, currentProgress: any[]): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/__tests__/integration/workflow-integration.test.ts",
      "line": 48,
      "content": "let mockConfig: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/__tests__/integration/workflow-integration.test.ts",
      "line": 110,
      "content": "await expect(workflow.execute(invalidInput as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/__tests__/integration/workflow-integration.test.ts",
      "line": 546,
      "content": "await expect(workflow.execute(null as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/analytics.ts",
      "line": 39,
      "content": "sourceEffectiveness: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/analytics.ts",
      "line": 40,
      "content": "departmentMetrics: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 47,
      "content": "education?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 48,
      "content": "workHistory?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 49,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 68,
      "content": "education?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 69,
      "content": "workHistory?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 71,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 513,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 136,
      "content": "conditions.push(eq(candidates.status, status as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 141,
      "content": "conditions.push(eq(candidates.stage, stage as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 150,
      "content": "conditions.push(eq(candidates.source, source as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 194,
      "content": ".orderBy(orderFn(sortColumn as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 368,
      "content": "source: candidateData.source as any || 'direct',",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 748,
      "content": "conditions.push(eq(candidates.status, status as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 753,
      "content": "conditions.push(eq(candidates.stage, stage as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/candidates.ts",
      "line": 763,
      "content": ".orderBy(orderFn(sortColumn as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 39,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 52,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 421,
      "content": "const updateFields: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 491,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 117,
      "content": "conditions.push(eq(interviews.status, status as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 122,
      "content": "conditions.push(eq(interviews.interviewType, type as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 126,
      "content": "conditions.push(eq(interviews.candidateId, candidateId as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 130,
      "content": "conditions.push(eq(interviews.requisitionId, requisitionId as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 136,
      "content": "conditions.push(eq(interviews.primaryInterviewer, interviewerId as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/interviews.ts",
      "line": 159,
      "content": ".orderBy(orderFn(sortColumn as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 42,
      "content": "benefits?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 44,
      "content": "relocationPackage?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 50,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 67,
      "content": "benefits?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 69,
      "content": "relocationPackage?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 73,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 80,
      "content": "equity?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 82,
      "content": "otherTerms?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 469,
      "content": "const updateFields: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 869,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 134,
      "content": "conditions.push(eq(offers.status, status as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 138,
      "content": "conditions.push(eq(offers.candidateId, candidateId as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 142,
      "content": "conditions.push(eq(offers.requisitionId, requisitionId as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/offers.ts",
      "line": 173,
      "content": ".orderBy(orderFn(sortColumn as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 41,
      "content": "benefits?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 46,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 65,
      "content": "benefits?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 69,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 734,
      "content": "async function calculateRequisitionAnalytics(requisitionId: string, requisition: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 118,
      "content": "conditions.push(eq(hiringRequisitions.status, status as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 122,
      "content": "conditions.push(eq(hiringRequisitions.department, department as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 126,
      "content": "conditions.push(eq(hiringRequisitions.urgency, urgency as any));",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 159,
      "content": ".orderBy(orderFn(sortColumn as any))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 359,
      "content": "level: updateData.level as any, // Cast to enum type",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 360,
      "content": "type: updateData.type as any, // Cast to enum type",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/api/requisitions.ts",
      "line": 792,
      "content": "acc[source as any] = { source, candidates: 0, hired: 0 };",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 26,
      "content": "education: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 27,
      "content": "skills: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 116,
      "content": "extractedData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 182,
      "content": "private async extractFromResume(resumeUrl: string, jobPosting: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 215,
      "content": "currentData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 216,
      "content": "conversationHistory: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 257,
      "content": "private async generateResponse(session: ApplicationSession, extractedData: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/application-bot.ts",
      "line": 382,
      "content": "private calculateCompletion(data: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/candidate-assessor.ts",
      "line": 135,
      "content": "cylinderAlignment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 13,
      "content": "experience: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 15,
      "content": "education: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 132,
      "content": "private extractCulturalIndicators(resumeText: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 160,
      "content": "private async assessValuesAlignment(candidateProfile: any, companyCulture: any): Promise<number> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 168,
      "content": "const totalIndicators = Object.values(candidateValues).reduce((sum: number, val: any) => sum + val, 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 169,
      "content": "const positiveIndicators = Object.values(candidateValues).reduce((sum: number, val: any) => sum + Math.max(0, val), 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 174,
      "content": "private calculateOverallScore(scores: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/culture-fit-assessor.ts",
      "line": 225,
      "content": "async generateInterviewQuestions(values: string[], culture: any): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 30,
      "content": "culture?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 53,
      "content": "async createRequisition(hiringNeed: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 97,
      "content": "async generateAndPublishJobPosting(requisition: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 468,
      "content": "private async performAIScreening(candidate: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 536,
      "content": "private async makeAIAssistedDecision(interviews: any[], cultureFit: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 554,
      "content": "private async publishToCompanyWebsite(posting: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 190,
      "content": "const value = result.value as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/hiring-module.ts",
      "line": 312,
      "content": "interviewType: interviewType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 9,
      "content": "private config: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 12,
      "content": "constructor(config: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 22,
      "content": "candidate: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 36,
      "content": "responses: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 79,
      "content": "async enhanceFeedback(rawFeedback: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 131,
      "content": "interviewerProfiles: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 174,
      "content": "private async sendSchedulingOptions(candidate: any, availability: any[], interviewId: string): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 198,
      "content": "private async analyzePreInterviewResponses(responses: any[]): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 219,
      "content": "private async generateFollowUpQuestions(responses: any[], insights: string): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 238,
      "content": "private async generateDynamicQuestions(interview: any): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 247,
      "content": "private async provideRealTimeInsights(interview: any): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 255,
      "content": "private async generatePrepGuide(candidate: any, interviewType: string): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 284,
      "content": "private async getInterviewerProfiles(interviews: any[]): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/interview-bot.ts",
      "line": 2,
      "content": "// import { sendEmail, sendSMS } from \"../../communications.js\";",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*import\\s+.*from",
      "priority": "medium"
    },
    {
      "file": "backend/services/modules/hiring/core/job-posting-generator.ts",
      "line": 13,
      "content": "culture?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-posting-generator.ts",
      "line": 14,
      "content": "compensation?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-posting-generator.ts",
      "line": 15,
      "content": "benefits?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-posting-generator.ts",
      "line": 71,
      "content": "function parseJobPosting(narrative: string, params: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-publishers.ts",
      "line": 1,
      "content": "export async function publishToLinkedIn(posting: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-publishers.ts",
      "line": 59,
      "content": "export async function publishToJobBoards(posting: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-publishers.ts",
      "line": 100,
      "content": "async function publishToIndeed(posting: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-publishers.ts",
      "line": 108,
      "content": "async function publishToGlassdoor(posting: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/core/job-publishers.ts",
      "line": 116,
      "content": "async function publishToAngelList(posting: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 16,
      "content": "settings?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 22,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 23,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 87,
      "content": "async handleTrigger(triggerType: string, config: any, unifiedResults: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 96,
      "content": "hiringNeeds: unifiedResults.recommendations?.filter((r: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 503,
      "content": "private generateNextTriggers(triggerType: string, results: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 510,
      "content": "if (results.filter && results.filter((r: any) => r.status === 'strategy_created').length > 0) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 542,
      "content": "private calculateConfidence(results: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 547,
      "content": "const successCount = results.filter((r: any) => r.status === 'strategy_created' || r.status === 'success').length;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 579,
      "content": "async processOutputTriggers(result: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 617,
      "content": "getStatus(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 733,
      "content": "candidateData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/hiring-module.ts",
      "line": 851,
      "content": "getStatus(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/__tests__/culture-integration.test.ts",
      "line": 28,
      "content": "let mockCandidateData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/__tests__/culture-integration.test.ts",
      "line": 345,
      "content": "jest.spyOn(cultureIntegration as any, 'getCultureAnalysisData').mockResolvedValue(null);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 43,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 77,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 93,
      "content": "cultureCriteria: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 157,
      "content": "candidateData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 244,
      "content": "candidateData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 292,
      "content": "candidateData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 327,
      "content": "private identifyEnablingValues(candidateData: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 336,
      "content": "private identifyLimitingValues(candidateData: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 346,
      "content": "cylinderAlignment: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 347,
      "content": "targetScores: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 375,
      "content": "private analyzeCylinderAlignment(cylinderAlignment: any, targetScores: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 428,
      "content": "alignmentAnalysis: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 429,
      "content": "): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/culture-integration.ts",
      "line": 490,
      "content": "private calculateMinimumCultureScore(cylinderScores: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 20,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 58,
      "content": "async processOutputTriggers(triggerTypes: string[], sourceResult: any): Promise<TriggerQueueResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 111,
      "content": "async createAndQueueTrigger(triggerType: string, sourceResult: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 136,
      "content": "private createOutputTriggerData(triggerType: string, sourceResult: any): OutputTriggerData | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 173,
      "content": "private getSpecificTriggerData(triggerType: string, sourceResult: any): any | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 178,
      "content": "positionsToCreate: sourceResult.data?.results?.filter((r: any) => r.status === 'strategy_created').length || 0,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/output-triggers.ts",
      "line": 413,
      "content": "private determineInterviewRounds(assessment: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 44,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 65,
      "content": "metadata: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 434,
      "content": "const updateData: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 339,
      "content": "level: hiringNeed.level as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 340,
      "content": "type: hiringNeed.type as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 341,
      "content": "urgency: hiringNeed.urgency as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 439,
      "content": "if (updates.level) updateData.level = updates.level as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/integrations/structure-integration.ts",
      "line": 440,
      "content": "if (updates.urgency) updateData.urgency = updates.urgency as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 31,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 266,
      "content": "candidate: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 267,
      "content": "requisition: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 332,
      "content": "interview: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 402,
      "content": "technicalSkills: this.calculateAverage(feedback.map((f: any) => f.scores.technicalSkills)),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 403,
      "content": "communication: this.calculateAverage(feedback.map((f: any) => f.scores.communication)),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 404,
      "content": "problemSolving: this.calculateAverage(feedback.map((f: any) => f.scores.problemSolving)),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 405,
      "content": "cultureFit: this.calculateAverage(feedback.map((f: any) => f.scores.cultureFit)),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 406,
      "content": "leadershipPotential: this.calculateAverage(feedback.map((f: any) => f.scores.leadershipPotential))",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 419,
      "content": "const recommendations = feedback.map((f: any) => f.recommendation);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 423,
      "content": "const allStrengths = feedback.flatMap((f: any) => f.strengths);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 424,
      "content": "const allWeaknesses = feedback.flatMap((f: any) => f.weaknesses);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 425,
      "content": "const allConcerns = feedback.flatMap((f: any) => f.concerns || []);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 435,
      "content": "unanimousDecision: recommendations.every((r: any) => r === recommendations[0])",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 502,
      "content": "private async updateCandidateAfterInterview(candidateId: string, aggregatedScores: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 504,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 537,
      "content": "private async determinePostInterviewActions(interviewId: string, aggregatedScores: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 590,
      "content": "private generateInterviewOutputTriggers(interview: any, aggregatedScores: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 618,
      "content": "candidate: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 674,
      "content": "candidate: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 675,
      "content": "requisition: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 676,
      "content": "): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 443,
      "content": "recommendation: recommendation as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/interviews.ts",
      "line": 472,
      "content": "acc[rec as any] = (acc[rec] || 0) + 1;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 31,
      "content": "benefits?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 33,
      "content": "relocationPackage?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 44,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 52,
      "content": "equity?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 54,
      "content": "otherTerms?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 175,
      "content": "async acceptOffer(offerId: string, acceptanceData?: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 440,
      "content": "candidate: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 441,
      "content": "requisition: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 442,
      "content": "compensationPackage: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 517,
      "content": "private validateOfferParameters(input: OfferWorkflowInput, requisition: any): void {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 542,
      "content": "private calculateCompensationPackage(input: OfferWorkflowInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 573,
      "content": "private estimateBenefitsValue(benefits: any[]): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 617,
      "content": "private determineOfferApprovalRequirement(input: OfferWorkflowInput, requisition: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 636,
      "content": "private async sendOfferNotification(offerId: string, offer: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 672,
      "content": "candidate: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/offers.ts",
      "line": 673,
      "content": "requisition: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 29,
      "content": "requiredSkills: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 47,
      "content": "structureAnalysis?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 48,
      "content": "organizationalContext?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 50,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 187,
      "content": "private enhanceJobDescription(input: RequisitionWorkflowInput, strategy: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 211,
      "content": "strategy: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 212,
      "content": "jobDescription: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/requisition.ts",
      "line": 323,
      "content": "private generateNextSteps(approvalRequired: boolean, strategy: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 20,
      "content": "culture?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 163,
      "content": "candidateData: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 164,
      "content": "requisitionData: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 165,
      "content": "): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 203,
      "content": "private async updateCandidateScores(candidateId: string, assessment: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 292,
      "content": "private async storeAssessment(input: ScreeningWorkflowInput, assessment: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 370,
      "content": "private determineNextSteps(assessment: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/hiring/workflows/screening.ts",
      "line": 418,
      "content": "private generateOutputTriggers(assessment: any, input: ScreeningWorkflowInput): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 100,
      "content": "response.body.data.forEach((path: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 114,
      "content": "response.body.data.forEach((path: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 278,
      "content": "response.body.data.forEach((path: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 323,
      "content": "response.body.data.forEach((course: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 334,
      "content": "response.body.data.forEach((course: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/api-endpoints.test.ts",
      "line": 57,
      "content": "} as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 72,
      "content": "async saveLearningPath(path: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 81,
      "content": "async getAllLearningPaths(filters: any = {}) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 99,
      "content": "async saveCourse(course: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 108,
      "content": "async getAllCourses(filters: any = {}) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 122,
      "content": "async saveEnrollment(enrollment: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 137,
      "content": "async saveAssessment(assessment: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 147,
      "content": "async saveProgress(progress: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 157,
      "content": "async getAnalytics(type: string, filters: any = {}) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 169,
      "content": "async updateEmployeeProfile(employeeId: string, updates: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 194,
      "content": "async makeRequest(method: string, url: string, data: any = null, headers: any = {}) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 210,
      "content": "async expectSuccess(response: any, expectedData: any = null) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 362,
      "content": "global.assertAPIResponse = (response: any, expectedStatus: number, expectedSuccess: boolean) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 369,
      "content": "global.assertLearningPathResponse = (response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 377,
      "content": "global.assertCourseResponse = (response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 385,
      "content": "global.assertEnrollmentResponse = (response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 393,
      "content": "global.assertAssessmentResponse = (response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/api/setup.ts",
      "line": 400,
      "content": "global.assertAnalyticsResponse = (response: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 295,
      "content": "async saveLearningPath(path: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 304,
      "content": "async saveCourse(course: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 313,
      "content": "async saveEnrollment(enrollment: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 322,
      "content": "async saveAssessment(assessment: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 331,
      "content": "async saveProgress(progress: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 348,
      "content": "async updateEmployeeProfile(employeeId: string, updates: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 454,
      "content": "global.assertWorkflowResult = (result: any, expectedType: string) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 464,
      "content": "global.assertLearningPath = (learningPath: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 474,
      "content": "global.assertProgressAnalysis = (analysis: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/integration/setup.ts",
      "line": 483,
      "content": "global.assertAssessmentResult = (result: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/global-teardown.ts",
      "line": 120,
      "content": "delete global.triggerConfigurations[key as any];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 196,
      "content": "async saveTrigger(trigger: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 205,
      "content": "async getAllTriggers(filters: any = {}) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 218,
      "content": "async saveResult(result: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 227,
      "content": "async saveModule(module: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 249,
      "content": "async logTriggerExecution(triggerId: string, result: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 364,
      "content": "global.assertTriggerConfig = (config: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 373,
      "content": "global.assertUnifiedResults = (results: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/setup.ts",
      "line": 382,
      "content": "global.assertModuleIntegration = (integration: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/trigger-integration.test.ts",
      "line": 45,
      "content": "} as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/__tests__/trigger-integration/trigger-integration.test.ts",
      "line": 726,
      "content": "const result = await processTrigger(triggerConfig, null as any);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/analytics.ts",
      "line": 118,
      "content": "async function getAnalyticsOverview(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/analytics.ts",
      "line": 138,
      "content": "async function getEmployeeAnalytics(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/analytics.ts",
      "line": 157,
      "content": "async function getCourseAnalytics(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/analytics.ts",
      "line": 176,
      "content": "async function getLearningEffectiveness(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/assessments.ts",
      "line": 168,
      "content": "async function getAssessment(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/assessments.ts",
      "line": 192,
      "content": "async function canStartAssessment(params: any): Promise<{ allowed: boolean; reason?: string }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/assessments.ts",
      "line": 197,
      "content": "async function startAssessment(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/assessments.ts",
      "line": 217,
      "content": "async function getAssessmentResults(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1077,
      "content": "content?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1078,
      "content": "assessments?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1079,
      "content": "metadata?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1094,
      "content": "updates: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1237,
      "content": "content: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/courses.ts",
      "line": 1305,
      "content": "}): Promise<{ results: any[]; total: number }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 140,
      "content": "const triggerContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 379,
      "content": "const triggerContext: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 760,
      "content": "updates: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 841,
      "content": "preferences: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 874,
      "content": "}): Promise<{ results: any[]; total: number }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/learning-paths.ts",
      "line": 897,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/progress-tracking.ts",
      "line": 240,
      "content": "async function getEmployeeProgress(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/progress-tracking.ts",
      "line": 256,
      "content": "async function getEnrollmentProgress(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/api/progress-tracking.ts",
      "line": 275,
      "content": "async function getEmployeeAllProgress(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 652,
      "content": "// Placeholder - would integrate with employee data and analysis results",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 681,
      "content": "// Placeholder - would generate multiple scenario games for the learning path",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 686,
      "content": "// Placeholder - would set up progress tracking for the learning path",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 695,
      "content": "// Placeholder - would initialize assessment framework",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 704,
      "content": "// Placeholder - would collect actual progress data",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 714,
      "content": "// Placeholder - would generate recommendations based on progress analysis",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 723,
      "content": "// Placeholder - would validate course completion",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 733,
      "content": "// Placeholder - would update progress tracking",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 742,
      "content": "// Placeholder - would generate completion assessment",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 752,
      "content": "// Placeholder - would determine next actions",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 761,
      "content": "// Placeholder - would prepare assessment",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 771,
      "content": "// Placeholder - would execute assessment",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 781,
      "content": "// Placeholder - would analyze assessment results",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 790,
      "content": "// Placeholder - would generate feedback",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 799,
      "content": "// Placeholder - would analyze game requirements",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 828,
      "content": "// Placeholder - would integrate game with learning path",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 838,
      "content": "// Placeholder - would set up game tracking",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 847,
      "content": "// Placeholder - would configure game assessment",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 856,
      "content": "// Placeholder - would deploy game",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// PLACEHOLDER",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 24,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 50,
      "content": "context: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 63,
      "content": "result: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 133,
      "content": "let result: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 540,
      "content": "private calculateOverallConfidence(result: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 570,
      "content": "private extractWarnings(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 680,
      "content": "private async generateScenarioGames(triggerContext: LXPTriggerContext, learningPath: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 685,
      "content": "private async setupProgressTracking(triggerContext: LXPTriggerContext, learningPath: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 694,
      "content": "private async initializeAssessmentFramework(triggerContext: LXPTriggerContext, learningPath: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 713,
      "content": "private async generateProgressRecommendations(progressAnalysis: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 732,
      "content": "private async updateProgressOnCompletion(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 741,
      "content": "private async generateCompletionAssessment(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 751,
      "content": "private async determineNextActionsOnCompletion(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 770,
      "content": "private async executeAssessment(triggerContext: LXPTriggerContext, preparation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 780,
      "content": "private async analyzeAssessmentResults(execution: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 789,
      "content": "private async generateAssessmentFeedback(analysis: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 827,
      "content": "private async integrateGameWithLearningPath(game: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 837,
      "content": "private async setupGameTracking(game: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 846,
      "content": "private async configureGameAssessment(game: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 855,
      "content": "private async deployGame(game: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 868,
      "content": "private determineNextActionsForLearningPath(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 877,
      "content": "private generateTriggersForLearningPath(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 885,
      "content": "private determineNextActionsForProgress(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 894,
      "content": "private generateTriggersForProgress(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 902,
      "content": "private determineNextActionsForCompletion(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 911,
      "content": "private generateTriggersForCompletion(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 919,
      "content": "private determineNextActionsForAssessment(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 928,
      "content": "private generateTriggersForAssessment(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 936,
      "content": "private determineNextActionsForGame(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 945,
      "content": "private generateTriggersForGame(result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 1004,
      "content": "getWorkflowStatistics(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 115,
      "content": "workflowType: workflowType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 256,
      "content": "return (workflowMapping as any)[triggerType] || 'learning_path_creation';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 268,
      "content": "return (stepCounts as any)[workflowType] || 3;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 292,
      "content": "triggerType: triggerContext.triggerType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 332,
      "content": "estimatedDuration: (learningPath as any).estimatedDuration,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 333,
      "content": "difficulty: (learningPath as any).difficulty,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 334,
      "content": "skillTargets: (learningPath as any).skillTargets",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 358,
      "content": "trackingType: (triggerContext.triggerData.trackingType as any) || 'individual_progress',",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 389,
      "content": "trackingType: (progressAnalysis as any).trackingType,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 390,
      "content": "confidence: (progressAnalysis as any).confidence",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 592,
      "content": "if ((unifiedResults as any).skillsAnalysis?.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 593,
      "content": "for (const trigger of (unifiedResults as any).skillsAnalysis.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 596,
      "content": "tenantId: (unifiedResults as any).tenantId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 597,
      "content": "employeeId: (unifiedResults as any).employeeId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 610,
      "content": "if ((unifiedResults as any).cultureAnalysis?.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 611,
      "content": "for (const trigger of (unifiedResults as any).cultureAnalysis.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 614,
      "content": "tenantId: (unifiedResults as any).tenantId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 615,
      "content": "employeeId: (unifiedResults as any).employeeId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 627,
      "content": "if ((unifiedResults as any).performanceAnalysis?.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 628,
      "content": "for (const trigger of (unifiedResults as any).performanceAnalysis.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 631,
      "content": "tenantId: (unifiedResults as any).tenantId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 632,
      "content": "employeeId: (unifiedResults as any).employeeId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/lxp-orchestrator.ts",
      "line": 1012,
      "content": "cancelled: workflows.filter(w => (w.status as any) === 'cancelled').length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/pipeline.ts",
      "line": 17,
      "content": "results?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/pipeline.ts",
      "line": 148,
      "content": "private async assessLearningNeeds(employee: any, talentProfile: any, currentProgress: any[]): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/pipeline.ts",
      "line": 118,
      "content": "const module = pipelineRun.modules[i as any];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 263,
      "content": "async processTrigger(triggerType: string, triggerData: any, unifiedResults?: UnifiedResults): Promise<TriggerHandlerResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 351,
      "content": "async processTriggersBatch(triggers: Array<{type: string, data: any}>, unifiedResults?: UnifiedResults): Promise<TriggerHandlerResult[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 386,
      "content": "private createTriggerContext(triggerType: string, triggerData: any, unifiedResults?: UnifiedResults): LXPTriggerContext {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 404,
      "content": "private determineUrgencyLevel(triggerType: string, triggerData: any): 'low' | 'medium' | 'high' | 'critical' {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 446,
      "content": "private extractTargetSkills(triggerType: string, triggerData: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 467,
      "content": "private extractLearningObjectives(triggerType: string, triggerData: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 490,
      "content": "private estimateDuration(triggerType: string, triggerData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 511,
      "content": "private extractConstraints(triggerType: string, triggerData: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 512,
      "content": "const constraints: any = {};",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 539,
      "content": "private validateTriggerConditions(triggerType: string, triggerData: any, config: TriggerHandlerConfig): {valid: boolean, reason?: string} {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 577,
      "content": "private extractTriggersFromUnifiedResults(unifiedResults: UnifiedResults): Array<{type: string, data: any}> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 578,
      "content": "const triggers: Array<{type: string, data: any}> = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 663,
      "content": "private async executeFallbackAction(fallbackAction: string, triggerType: string, triggerData: any): Promise<LXPOrchestrationResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 713,
      "content": "getHandlerStats(triggerType?: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 742,
      "content": "getHandlerHealth(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 376,
      "content": "console.log(`[LXP Trigger Handler] Processing unified results for employee: ${(unifiedResults as any).employeeId}`);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 390,
      "content": "tenantId: (unifiedResults as any)?.tenantId || triggerData.tenantId || 'default',",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 391,
      "content": "employeeId: (unifiedResults as any)?.employeeId || triggerData.employeeId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 422,
      "content": "return (urgencyMap as any)[triggerType] || 'medium';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 443,
      "content": "return (sourceMap as any)[triggerType] || 'unknown';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 508,
      "content": "return (durationMap as any)[triggerType] || 60;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 551,
      "content": "if (conditions.minUrgencyLevel && (urgencyOrder as any)[urgencyLevel] < (urgencyOrder as any)[conditions.minUrgencyLevel]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 555,
      "content": "if (conditions.maxUrgencyLevel && (urgencyOrder as any)[urgencyLevel] > (urgencyOrder as any)[conditions.maxUrgencyLevel]) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 581,
      "content": "if ((unifiedResults as any).skillsAnalysis?.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 582,
      "content": "for (const trigger of (unifiedResults as any).skillsAnalysis.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 588,
      "content": "tenantId: (unifiedResults as any).tenantId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 589,
      "content": "employeeId: (unifiedResults as any).employeeId",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 597,
      "content": "if ((unifiedResults as any).cultureAnalysis?.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 598,
      "content": "for (const trigger of (unifiedResults as any).cultureAnalysis.triggers) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 604,
      "content": "tenantId: (unifiedResults as any).tenantId,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 605,
      "content": "employeeId: (unifiedResults as any).employeeId",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 613,
      "content": "const unifiedResultsAny = unifiedResults as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/core/trigger-handlers.ts",
      "line": 756,
      "content": "(health.handlers as any)[triggerType as any] = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 220,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 328,
      "content": "progressUpdate?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 375,
      "content": "updatedScores?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 907,
      "content": "private async updateCultureProgressTracking(progressData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 922,
      "content": "private async calculateCultureAlignmentUpdate(progressData: any): Promise<CultureAlignmentUpdate> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 949,
      "content": "private async sendProgressUpdateToCultureAnalysis(progressUpdate: any, alignmentUpdate?: CultureAlignmentUpdate): Promise<{ success: boolean; error?: string }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 977,
      "content": "private async sendAlignmentUpdateToCultureAnalysis(alignmentData: CultureAlignmentUpdate): Promise<{ success: boolean; updatedScores?: any; error?: string }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 365,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/culture-integration.ts",
      "line": 416,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 82,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 193,
      "content": "improvementAnalysis?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 410,
      "content": "private async sendImprovementAnalysisToPerformanceManagement(analysis: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 443,
      "content": "private async generatePerformanceRecommendations(analysis: any): Promise<string[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 149,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 234,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 271,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 340,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/performance-integration.ts",
      "line": 435,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 69,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 136,
      "content": "validationResults?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 176,
      "content": "assessmentResults: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 177,
      "content": "practicalApplication?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 178,
      "content": "peerFeedback?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 349,
      "content": "private async createSkillUpdate(completionData: any, skillName: string): Promise<SkillUpdate | null> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 407,
      "content": "private async validateBasedOnAssessment(assessmentResults: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 435,
      "content": "private async validateBasedOnPracticalApplication(practicalApplication: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 460,
      "content": "private async validateBasedOnPeerFeedback(peerFeedback: any): Promise<{",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 487,
      "content": "assessment: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 488,
      "content": "practical?: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 489,
      "content": "peer?: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 534,
      "content": "private generateValidationRecommendations(validated: boolean, confidence: number, validations: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 557,
      "content": "private async sendValidationResultsToSkillsAnalysis(validationData: any, results: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/integrations/skills-integration.ts",
      "line": 623,
      "content": "private calculateSkillConfidence(assessmentScore?: number, validationResults?: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 38,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 166,
      "content": "async handleTrigger(triggerType: string, triggerData: any, unifiedResults?: UnifiedResults): Promise<LXPModuleResult> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 225,
      "content": "async processTriggerData(triggerType: string, triggerData: any, unifiedResults?: UnifiedResults): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 322,
      "content": "private createOutputTriggerData(triggerType: string, sourceResult: LXPModuleResult): any | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 393,
      "content": "private async simulateTriggerQueuing(triggerType: string, triggerData: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 441,
      "content": "private determineNextTriggers(triggerType: string, result: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 480,
      "content": "result.nextActions.forEach((action: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 489,
      "content": "result.triggers.forEach((trigger: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 514,
      "content": "private isTrainingCompletion(triggerType: string, result: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 530,
      "content": "private isLearningPathCompletion(triggerType: string, result: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 545,
      "content": "private isSkillValidation(triggerType: string, result: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 565,
      "content": "private createPerformanceAssessmentTrigger(result: any): string | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 601,
      "content": "private createPerformanceManagementTrigger(result: any): string | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 637,
      "content": "private createSkillsAnalysisTrigger(result: any): string | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 672,
      "content": "private addAdditionalOutputTriggers(triggerType: string, result: any, nextTriggers: string[]): void {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 788,
      "content": "private calculateConfidence(result: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 840,
      "content": "async checkHealth(): Promise<{ healthy: boolean; status: string; details: any }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 895,
      "content": "skillGaps: skillGapData.skillGaps.map((sg: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 938,
      "content": "validationResults?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 980,
      "content": "assessmentResults: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 981,
      "content": "practicalApplication?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 982,
      "content": "peerFeedback?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1026,
      "content": "async notifySkillsAnalysisOfUpdates(employeeId: string, tenantId: string, updates: any[]): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1276,
      "content": "currentAlignment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1277,
      "content": "targetAlignment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1278,
      "content": "cultureGaps: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1279,
      "content": "learningPreferences: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1280,
      "content": "organizationalContext: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1378,
      "content": "alignmentChanges: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 217,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 230,
      "content": "const unifiedResultsAny = unifiedResults as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 860,
      "content": "details: { error: error instanceof Error ? (error as any).message : 'Unknown error' }",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 999,
      "content": "previousLevel: (validationData as any).previousLevel || 0,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/lxp-module.ts",
      "line": 1000,
      "content": "newLevel: (validationData as any).newLevel || ((validationData as any).previousLevel || 0) + 1,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 19,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 21,
      "content": "assessmentData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 28,
      "content": "assessment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 29,
      "content": "scoring: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 30,
      "content": "analytics: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 31,
      "content": "feedback: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 32,
      "content": "recommendations: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 466,
      "content": "private async scoreAssessment(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 502,
      "content": "private async calculateTotalScore(triggerContext: LXPTriggerContext, assessment: any): Promise<number> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 514,
      "content": "private async calculateMaxScore(assessment: any): Promise<number> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 515,
      "content": "return assessment.questions.reduce((total: any, question: any) => total + question.points, 0);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 518,
      "content": "private async calculatePercentage(triggerContext: LXPTriggerContext, assessment: any): Promise<number> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 524,
      "content": "private async determinePassFail(triggerContext: LXPTriggerContext, assessment: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 529,
      "content": "private async calculateSectionScores(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 550,
      "content": "private async calculateQuestionScores(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 576,
      "content": "private async calculateCompetencyScores(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 595,
      "content": "private async analyzeScoring(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 610,
      "content": "private async analyzeTimeUsage(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 624,
      "content": "private async analyzeDifficultyPerformance(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 633,
      "content": "private async generateScoringMetadata(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 648,
      "content": "private async analyzeAssessmentResults(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 683,
      "content": "private async generatePerformanceAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 704,
      "content": "private async generateLearningAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 725,
      "content": "private async generateCompetencyAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 753,
      "content": "private async generateBehavioralAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 774,
      "content": "private async generatePredictiveAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 794,
      "content": "private async generateComparativeAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 819,
      "content": "private async generateTrendAnalytics(triggerContext: LXPTriggerContext, assessment: any, scoring: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 842,
      "content": "private async generateAssessmentFeedback(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 877,
      "content": "private async generateOverallFeedback(scoring: any, analytics: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 889,
      "content": "private async generateDetailedFeedback(assessment: any, scoring: any, analytics: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 893,
      "content": "areasForImprovement: analytics.competencyAnalytics.competencyGaps.map((gap: any) => gap.competency),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 902,
      "content": "private async generateSectionFeedback(assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 903,
      "content": "return scoring.sectionScores.map((section: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 917,
      "content": "private async generateQuestionFeedback(assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 918,
      "content": "return scoring.questionScores.map((question: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 929,
      "content": "private async generateCompetencyFeedback(assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 942,
      "content": "private async generateImprovementFeedback(scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 967,
      "content": "private async generateEncouragementFeedback(scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 980,
      "content": "private async generateAssessmentRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1012,
      "content": "private async generateLearningRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1033,
      "content": "private async generateSkillRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1060,
      "content": "private async generatePracticeRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1081,
      "content": "private async generateResourceRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1107,
      "content": "private async generateNextStepsRecommendations(triggerContext: LXPTriggerContext, assessment: any, scoring: any, analytics: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1166,
      "content": "private calculateOverallConfidence(assessment: any, scoring: any, analytics: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1191,
      "content": "private determineNextActions(assessment: any, scoring: any, analytics: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 1211,
      "content": "private generateTriggers(triggerContext: LXPTriggerContext, scoring: any, analytics: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 189,
      "content": "return (assessmentTypeMap as any)[triggerContext.triggerType] || 'formative';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 362,
      "content": "return (passingScoreMap as any)[assessmentType] || 70;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 511,
      "content": "return (scoreMap as any)[triggerContext.triggerType] || 85;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 932,
      "content": "level: (data as any).level,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 933,
      "content": "score: (data as any).score,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 934,
      "content": "feedback: (data as any).score >= 0.9 ?",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/assessment-engine.ts",
      "line": 936,
      "content": "(data as any).score >= 0.8 ?",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 19,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 20,
      "content": "completionData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 27,
      "content": "completionValidation: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 28,
      "content": "progressUpdate: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 29,
      "content": "assessment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 30,
      "content": "nextActions: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 413,
      "content": "private async updateProgressOnCompletion(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 454,
      "content": "private async updateLearningPathProgress(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 467,
      "content": "private async updateCourseProgress(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 479,
      "content": "private async updateSkillDevelopment(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 495,
      "content": "private async updatePerformanceMetrics(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 512,
      "content": "private async updateMilestones(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 542,
      "content": "private async updateAchievements(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 568,
      "content": "private async updateCertifications(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 588,
      "content": "private async performDatabaseUpdates(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 612,
      "content": "private async updateNotifications(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 643,
      "content": "private async generateCompletionAssessment(triggerContext: LXPTriggerContext, validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 677,
      "content": "private async generateOverallAssessment(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 692,
      "content": "private async generatePerformanceAnalysis(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 714,
      "content": "private async generateSkillAnalysis(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 735,
      "content": "private async generateEngagementAnalysis(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 756,
      "content": "private async generateAssessmentRecommendations(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 782,
      "content": "private async generateAssessmentFeedback(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 803,
      "content": "private async generateNextSteps(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 828,
      "content": "private async generateAssessmentReports(validation: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 855,
      "content": "private async determineNextActionsOnCompletion(triggerContext: LXPTriggerContext, assessment: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 887,
      "content": "private async generateImmediateActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 913,
      "content": "private async generateLearningPathActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 939,
      "content": "private async generatePerformanceActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 965,
      "content": "private async generateCareerActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 991,
      "content": "private async generateOrganizationalActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 1017,
      "content": "private async generateFollowUpActions(triggerContext: LXPTriggerContext, assessment: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 1051,
      "content": "private calculateOverallConfidence(validation: any, assessment: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 1078,
      "content": "private generateCompletionTriggers(triggerContext: LXPTriggerContext, assessment: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/course-completion.ts",
      "line": 117,
      "content": "errors: [error instanceof Error ? (error as any).message : 'Unknown error']",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 19,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 22,
      "content": "constraints: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 23,
      "content": "employeeProfile: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 24,
      "content": "organizationalContext: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 31,
      "content": "learningPath: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 32,
      "content": "scenarioGames: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 33,
      "content": "progressTracking: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 34,
      "content": "assessmentFramework: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 35,
      "content": "learningNeeds: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 236,
      "content": "private analyzeUrgencyFactors(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 246,
      "content": "private analyzeConstraints(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 257,
      "content": "private analyzeLearningPreferences(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 267,
      "content": "private analyzeTimeline(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 281,
      "content": "private async designLearningPath(triggerContext: LXPTriggerContext, learningNeeds: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 334,
      "content": "private async generateScenarioGames(triggerContext: LXPTriggerContext, learningPath: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 383,
      "content": "private shouldGenerateGames(triggerContext: LXPTriggerContext, learningPath: any): boolean {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 386,
      "content": "const hasGameCompatibleSkills = learningPath.skillTargets?.some((skill: any) =>",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 393,
      "content": "private determineGameTypes(triggerContext: LXPTriggerContext, learningPath: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 408,
      "content": "private determineGameParameters(triggerContext: LXPTriggerContext, gameType: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 431,
      "content": "private async setupProgressTracking(triggerContext: LXPTriggerContext, learningPath: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 455,
      "content": "private determineTrackingMetrics(triggerContext: LXPTriggerContext, learningPath: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 482,
      "content": "private calculateProgressMilestones(learningPath: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 483,
      "content": "const milestones: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 486,
      "content": "modules.forEach((module: any, index: number) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 499,
      "content": "private setupProgressNotifications(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 519,
      "content": "private setupProgressReporting(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 528,
      "content": "private setupProgressIntegration(triggerContext: LXPTriggerContext, learningPath: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 549,
      "content": "private async initializeAssessmentFramework(triggerContext: LXPTriggerContext, learningPath: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 599,
      "content": "private determineAssessmentCriteria(triggerContext: LXPTriggerContext, learningPath: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 619,
      "content": "private setupAssessmentScoring(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 632,
      "content": "private setupAssessmentFeedback(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 642,
      "content": "private setupCertificationRequirements(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 653,
      "content": "private setupAssessmentIntegration(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 670,
      "content": "private calculateOverallConfidence(learningPath: any, scenarioGames: any[], assessmentFramework: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 693,
      "content": "private determineNextActions(learningPath: any, scenarioGames: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 708,
      "content": "private generateTriggers(learningPath: any, scenarioGames: any[]): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 723,
      "content": "private extractMotivationFactors(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 731,
      "content": "private analyzeLearningCulture(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 740,
      "content": "private analyzeAvailableResources(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 749,
      "content": "private analyzeOrganizationalConstraints(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 779,
      "content": "private analyzeAccessibilityConstraints(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 788,
      "content": "private analyzeTechnologyConstraints(triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 797,
      "content": "private calculateMilestones(triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 818,
      "content": "private calculateMilestoneDate(module: any, index: number): Date {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 185,
      "content": "const specificObjectives = (triggerObjectives as any)[(triggerContext.triggerType) as any] || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 204,
      "content": "const specificSkills = (triggerSkills as any)[triggerContext.triggerType] || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 239,
      "content": "deadline: (triggerContext.constraints as any)?.timeLimit,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 270,
      "content": "deadline: (triggerContext.constraints as any)?.timeLimit,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 287,
      "content": "triggerType: triggerContext.triggerType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 322,
      "content": "modules: (enhancedLearningPath as any).modules?.length || 0,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 323,
      "content": "estimatedDuration: (enhancedLearningPath as any).estimatedDuration,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 324,
      "content": "difficulty: (enhancedLearningPath as any).difficulty",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 405,
      "content": "return (gameTypeMap as any)[triggerContext.triggerType] || ['scenario_based'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 424,
      "content": "return (difficultyMap as any)[urgencyLevel] || 'intermediate';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 468,
      "content": "const specificMetrics = (triggerMetrics as any)[triggerContext.triggerType] || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 586,
      "content": "return (assessmentTypeMap as any)[triggerContext.triggerType] || 'formative';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 611,
      "content": "const specificCriteria = (triggerCriteria as any)[triggerContext.triggerType] || [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 650,
      "content": "return (certificationMap as any)[triggerContext.triggerType] || { required: false, type: 'Completion Certificate' };",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 776,
      "content": "return (riskMap as any)[triggerContext.triggerType] || ['learning_delay', 'skill_gap_persistence'];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/learning-path-creation.ts",
      "line": 815,
      "content": "return (triggerContext.constraints as any)?.timeLimit ? 'fixed' : 'flexible';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 174,
      "content": "const mockProgress = {",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 20,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 30,
      "content": "progressAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 31,
      "content": "recommendations: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 32,
      "content": "progressData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 459,
      "content": "private async analyzeProgress(triggerContext: LXPTriggerContext, progressData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 548,
      "content": "private generateProgressInsights(progressData: any, analysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 572,
      "content": "private identifyRiskFactors(progressData: any, analysis: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 605,
      "content": "private identifyOpportunities(progressData: any, analysis: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 635,
      "content": "private analyzeTrends(progressData: any, analysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 646,
      "content": "private calculateBenchmarks(progressData: any, analysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 666,
      "content": "private generatePredictions(progressData: any, analysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 692,
      "content": "private async generateProgressRecommendations(progressAnalysis: any, triggerContext: LXPTriggerContext): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 716,
      "content": "private generateImmediateActions(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 721,
      "content": "progressAnalysis.riskFactors.forEach((risk: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 756,
      "content": "private generateShortTermGoals(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 795,
      "content": "private generateLongTermGoals(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 825,
      "content": "private generateLearningAdjustments(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 864,
      "content": "private generateSupportInterventions(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 868,
      "content": "if (progressAnalysis.riskFactors?.some((risk: any) => risk.severity === 'high')) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 915,
      "content": "private generateResourceRecommendations(progressAnalysis: any, triggerContext: LXPTriggerContext): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 920,
      "content": "progressAnalysis.skillDevelopment.skillGaps.forEach((skill: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 933,
      "content": "progressAnalysis.performanceMetrics.improvementAreas.forEach((area: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 958,
      "content": "private generateTimelineRecommendations(progressAnalysis: any, triggerContext: LXPTriggerContext): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 991,
      "content": "private calculatePriorityLevel(progressAnalysis: any, triggerContext: LXPTriggerContext): string {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 1015,
      "content": "private calculateOverallConfidence(progressAnalysis: any, recommendations: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 1037,
      "content": "private calculateDataCompleteness(progressAnalysis: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 1043,
      "content": "private calculateRecommendationQuality(recommendations: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 1058,
      "content": "private determineNextActions(progressAnalysis: any, recommendations: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/lxp/workflows/progress-tracking.ts",
      "line": 1080,
      "content": "private generateTriggers(progressAnalysis: any, recommendations: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/__tests__/integration/workflow-integration.test.ts",
      "line": 600,
      "content": "const invalidInput: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/__tests__/integration/workflow-integration.test.ts",
      "line": 610,
      "content": "const invalidInput: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/__tests__/integration/workflow-integration.test.ts",
      "line": 631,
      "content": "const invalidInput: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 179,
      "content": "async function getPerformanceOverview(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 196,
      "content": "async function getEmployeeAnalytics(employeeId: string, params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 226,
      "content": "async function getPerformanceTrends(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 247,
      "content": "async function getPerformanceDistribution(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 268,
      "content": "async function getPerformanceBenchmarks(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 290,
      "content": "async function getPerformanceRisks(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 33,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 62,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 89,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 116,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 143,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/analytics.ts",
      "line": 170,
      "content": "message: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/coaching.ts",
      "line": 211,
      "content": "async function fetchCoachingSessions(filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/coaching.ts",
      "line": 246,
      "content": "async function fetchEmployeeCoachingPlans(employeeId: string, filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/coaching.ts",
      "line": 259,
      "content": "async function getCoachingEffectiveness(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 161,
      "content": "async function fetchFeedback(filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 197,
      "content": "async function createFeedback(feedbackData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 229,
      "content": "async function fetchEmployeeFeedback(employeeId: string, filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 258,
      "content": "async function performSentimentAnalysis(params: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 283,
      "content": "positive: allFeedback.filter(f => (f as any).sentiment === 'positive').length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 284,
      "content": "neutral: allFeedback.filter(f => (f as any).sentiment === 'neutral').length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 285,
      "content": "negative: allFeedback.filter(f => (f as any).sentiment === 'negative').length,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 286,
      "content": "mixed: allFeedback.filter(f => (f as any).sentiment === 'mixed').length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/feedback.ts",
      "line": 301,
      "content": "const allComments = allFeedback.map(f => (f as any).comments || '').join(' ').toLowerCase();",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 248,
      "content": "async function fetchGoals(filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 294,
      "content": "async function createGoalManually(goalData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 328,
      "content": "async function updateGoal(id: string, updates: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 330,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 367,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/goals.ts",
      "line": 392,
      "content": "async function fetchEmployeeGoals(employeeId: string, filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/index.ts",
      "line": 46,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/index.ts",
      "line": 66,
      "content": "error: error instanceof Error ? (error as any).message : 'Unknown error'",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/reviews.ts",
      "line": 216,
      "content": "async function fetchReviews(filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/reviews.ts",
      "line": 260,
      "content": "async function updateReview(id: string, updates: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/reviews.ts",
      "line": 262,
      "content": "const updateData: any = {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/api/reviews.ts",
      "line": 305,
      "content": "async function fetchEmployeeReviews(employeeId: string, filters: any): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 290,
      "content": "strategy: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 291,
      "content": "structure: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 313,
      "content": "objectives: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 353,
      "content": "department: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 354,
      "content": "orgGoals: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 128,
      "content": "...(latestAssessment.personalValues as any[] || []),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 129,
      "content": "...(latestAssessment.currentExperience as any[] || []),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 130,
      "content": "...(latestAssessment.desiredExperience as any[] || [])",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 177,
      "content": "...(latestGapAnalysis.criticalGaps as any[] || []),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 178,
      "content": "...(latestGapAnalysis.moderateGaps as any[] || []),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 179,
      "content": "...(latestGapAnalysis.trainingRecommendations as any[] || [])",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 226,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 270,
      "content": "const analysisData = latestAnalysis.results as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 379,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 461,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 523,
      "content": "const managerId = (employee.metadata as any)?.managerId || 'system';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 524,
      "content": "const departmentId = (employee.metadata as any)?.departmentId || 'unknown';",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 555,
      "content": "eq(performanceGoals.metadata, { cycleId } as any)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/cycle-manager.ts",
      "line": 570,
      "content": "eq(performanceGoals.metadata, { cycleId } as any)",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 24,
      "content": "preparationData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 25,
      "content": "agendaItems: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 96,
      "content": "suggestions: suggestions.topics.map((t: any) => t.topic),",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 105,
      "content": "employee: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 106,
      "content": "manager: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 107,
      "content": "recentGoals: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 163,
      "content": "suggestedTopics: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 230,
      "content": "meeting: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 232,
      "content": "goals: any[],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 233,
      "content": "recentFeedback: any[]",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 288,
      "content": "agendaItems?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 402,
      "content": "discussionPoints?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 403,
      "content": "actionItems?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 404,
      "content": "decisions?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 407,
      "content": "feedbackToEngagement: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 408,
      "content": "feedbackToRecognition: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 456,
      "content": "private async analyzeMeetingInsights(meetingData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 141,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 221,
      "content": "suggestedTopics: meeting.suggestedTopics as any[] || [],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 272,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 340,
      "content": "const responseResult = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 506,
      "content": "const result = typeof response === 'string' ? response : (response as any).result || response;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/one-on-one-bot.ts",
      "line": 543,
      "content": "if (meeting.agenda && (meeting.agenda as any[]).length > 0) readinessScore += 20;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/trigger-handlers.ts",
      "line": 12,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/trigger-handlers.ts",
      "line": 24,
      "content": "results: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/trigger-handlers.ts",
      "line": 28,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/core/trigger-handlers.ts",
      "line": 517,
      "content": "private determineProbationOutcome(performanceLevel: string): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/integrations/lxp-integration.ts",
      "line": 112,
      "content": "}): Promise<{ recommendations: any[] }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/integrations/lxp-integration.ts",
      "line": 146,
      "content": "message: `LXP integration error: ${error instanceof Error ? (error as any).message : 'Unknown error'}`",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/integrations/lxp-integration.ts",
      "line": 53,
      "content": "// const response = await lxpModule.createLearningPath({",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/modules/performance/integrations/reward-integration.ts",
      "line": 175,
      "content": "message: `Reward integration error: ${error instanceof Error ? (error as any).message : 'Unknown error'}`",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/integrations/reward-integration.ts",
      "line": 60,
      "content": "// const response = await rewardModule.createReward({",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/modules/performance/integrations/talent-integration.ts",
      "line": 172,
      "content": "message: `Talent Management integration error: ${error instanceof Error ? (error as any).message : 'Unknown error'}`",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/integrations/talent-integration.ts",
      "line": 61,
      "content": "// const response = await talentModule.addToTalentPool({",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 114,
      "content": "// TODO: Implement initialize methods in performance agents",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 29,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 44,
      "content": "results: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 48,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 661,
      "content": "private async determineOutputTriggers(analysisResult: any, coachingResult?: any): Promise<Array<any>> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 794,
      "content": "private generateLearningTriggers(coachingResult: any): Array<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 818,
      "content": "public getStatus(): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 835,
      "content": "public async checkHealth(): Promise<{ healthy: boolean; details: any }> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/performance-module.ts",
      "line": 443,
      "content": "confidence: (goalResult as any).metadata?.confidence || 0.8,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 139,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 414,
      "content": "private extractGapAnalysis(analysisResult: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 434,
      "content": "private createDevelopmentPlan(coachingResult: any, gapAnalysis: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 445,
      "content": "private assignLearningActivities(developmentPlan: any, gapAnalysis: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 446,
      "content": "const activities: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 476,
      "content": "private async createImprovementPlan(input: CoachingWorkflowInput, gapAnalysis: any, coachingResult: any): Promise<string> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 498,
      "content": "performanceIssues: gapAnalysis.developmentAreas?.map((area: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 505,
      "content": "objectives: gapAnalysis.developmentAreas?.slice(0, 5).map((area: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 512,
      "content": "successCriteria: coachingResult.coachingPlan?.successMetrics?.map((metric: any) => ({",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 566,
      "content": "private setupProgressTracking(coachingResult: any, input: CoachingWorkflowInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 587,
      "content": "private generateOutputTriggers(gapAnalysis: any, learningActivities: any[], input: CoachingWorkflowInput): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 588,
      "content": "const triggers: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/coaching.ts",
      "line": 485,
      "content": "const inputAny = input as any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 317,
      "content": "private transformRecommendationsToGoals(recommendations: any[], employeeId: string, tenantId: string, period: string): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 344,
      "content": "private generateDefaultMilestones(period: string): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 368,
      "content": "private validateGoalAlignment(goals: any[], organizationalObjectives: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 422,
      "content": "private extractKeywords(obj: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 459,
      "content": "private calculateTeamAlignment(goal: any, organizationalObjectives: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 486,
      "content": "private async storeGoals(goals: any[], input: GoalSettingWorkflowInput): Promise<any[]> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 540,
      "content": "private generateRecommendations(agentResult: any, storedGoals: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/goal-setting.ts",
      "line": 563,
      "content": "private async notifyStakeholders(employeeId: string, managerId: string, goals: any[]): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 43,
      "content": "goalAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 44,
      "content": "competencyAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 45,
      "content": "behaviorAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 46,
      "content": "feedbackAnalysis: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 47,
      "content": "riskAssessment: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 51,
      "content": "coachingPlan: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 52,
      "content": "developmentRoadmap: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 53,
      "content": "recommendations: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 68,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 402,
      "content": "private async generateCoachingGuidance(input: PerformanceReviewWorkflowInput, analysisResult: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 448,
      "content": "private calculateOverallScore(analysisResult: any, feedbackData: any): number {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 476,
      "content": "private generateReviewReport(analysisResult: any, coachingGuidance: any, input: PerformanceReviewWorkflowInput): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 481,
      "content": "achievements: analysisResult.goalAnalysis.topPerformingGoals?.map((g: any) => g.title) || [],",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 485,
      "content": "...(coachingGuidance?.recommendations.immediate.map((r: any) => r.recommendation) || [])",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 494,
      "content": "private async storeReview(reviewId: string, input: PerformanceReviewWorkflowInput, analysisResult: any, overallScore: number): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 573,
      "content": "private determineNextActions(analysisResult: any, input: PerformanceReviewWorkflowInput): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 574,
      "content": "const triggers: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 674,
      "content": "private async notifyStakeholders(input: PerformanceReviewWorkflowInput, reviewReport: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 133,
      "content": "type: input.reviewType as any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 141,
      "content": "organizationalContext: input.organizationalContext as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 435,
      "content": "organizationalContext: input.organizationalContext as any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/review.ts",
      "line": 534,
      "content": "employeeComments: (input as any).selfAssessment?.comments || '',",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 61,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 335,
      "content": "private async updatePerformanceMetrics(input: PerformanceTrackingWorkflowInput, performanceData: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 345,
      "content": "const activeGoals = goals.filter((g: any) => g.status === 'active');",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 346,
      "content": "const completedGoals = goals.filter((g: any) => g.status === 'completed');",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 350,
      "content": "? activeGoals.reduce((sum: number, g: any) => sum + parseFloat(g.progressPercentage || '0'), 0) / activeGoals.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 358,
      "content": "const atRiskGoals = activeGoals.filter((g: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 373,
      "content": "? recentFeedback.reduce((sum: number, f: any) => sum + parseFloat(f.rating || '0'), 0) / recentFeedback.length",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 415,
      "content": "private identifyPerformanceIssues(goalProgress: any[], performanceData: any): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 416,
      "content": "const alerts: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 456,
      "content": "private async analyzeTrends(input: PerformanceTrackingWorkflowInput, performanceData: any): Promise<any> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 472,
      "content": "private calculateCurrentStatus(goalProgress: any[]): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 498,
      "content": "private generateTrackingInsights(goalProgress: any[], alerts: any[], currentStatus: any): any {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 540,
      "content": "private triggerInterventionsIfNeeded(alerts: any[], currentStatus: any, input: PerformanceTrackingWorkflowInput): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/modules/performance/workflows/tracking.ts",
      "line": 541,
      "content": "const interventions: any[] = [];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 84,
      "content": "// TODO: Implement Redis health check when Redis is available",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 169,
      "content": "// TODO: Implement disk space check",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 207,
      "content": "// TODO: Check external services like email, SMS, etc.",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 15,
      "content": "details?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 85,
      "content": "// const redis = getRedisClient();",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 170,
      "content": "// const fs = require('fs');",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/monitoring/health-check.ts",
      "line": 171,
      "content": "// const stats = fs.statSync('.');",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/monitoring/metrics.ts",
      "line": 170,
      "content": "// const activeUsers = await db.select().from(users).where(eq(users.status, 'active'));",
      "rule": "noCommentedCode",
      "severity": "warning",
      "message": "Commented code detected - delete or uncomment",
      "pattern": "^\\s*//\\s*const\\s+\\w+\\s*=",
      "priority": "medium"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 15,
      "content": "orgChart?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 17,
      "content": "employeeData?: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 18,
      "content": "performanceMetrics?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 23,
      "content": "structure: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 24,
      "content": "culture: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 25,
      "content": "skills: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 26,
      "content": "engagement?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 27,
      "content": "recognition?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 28,
      "content": "performance?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 29,
      "content": "benchmarking?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 220,
      "content": "function generateRecommendations(structure: any, culture: any, skills: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/orchestrator/architect-ai.ts",
      "line": 253,
      "content": "function generateNextSteps(structure: any, culture: any, skills: any): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/queue.ts",
      "line": 157,
      "content": "export async function addAnalysisJob(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/queue.ts",
      "line": 167,
      "content": "export async function addHiringJob(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/queue.ts",
      "line": 177,
      "content": "export async function addSocialMediaJob(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/queue.ts",
      "line": 187,
      "content": "export async function addEmailJob(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/queue.ts",
      "line": 197,
      "content": "export async function addNotificationJob(data: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 9,
      "content": "findings: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 10,
      "content": "recommendations: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 72,
      "content": "result.findings.forEach((finding: any, index: number) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 87,
      "content": "result.recommendations.forEach((rec: any, index: number) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 114,
      "content": "export async function generateCultureReport(data: any): Promise<Buffer> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/reports/structure-report.ts",
      "line": 119,
      "content": "export async function generateSkillsReport(data: any): Promise<Buffer> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 287,
      "content": "// TODO: Implement Performance module handler when module is ready",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 15,
      "content": "config: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 26,
      "content": "data: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 110,
      "content": "async function processTrigger(trigger: any, unifiedResults: UnifiedResults): Promise<TriggerResult | null> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 409,
      "content": "function processSkillGapsTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 434,
      "content": "function processHiringNeedsTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 457,
      "content": "function processCultureLearningTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 501,
      "content": "function processEmployeeSkillGapTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 557,
      "content": "function processCultureAlignmentTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 621,
      "content": "function processStructureOptimalTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 698,
      "content": "function processStructureInflatedTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 787,
      "content": "function processCandidateHiredTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 863,
      "content": "function processLXPCompletedTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 957,
      "content": "function processPerformanceRewardTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1055,
      "content": "function processPerformanceLXPTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1153,
      "content": "function processPerformanceTalentSuccessionTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1271,
      "content": "function processPerformanceImprovementLXPTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1390,
      "content": "function processAnnualPerformanceReviewTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1517,
      "content": "function processQuarterlyCheckinTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1668,
      "content": "function processProbationPeriodEndingTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1832,
      "content": "function processComplianceTrainingDueTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 1998,
      "content": "function processSafetyTrainingExpiredTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 2182,
      "content": "function processCertificationExpiringTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 2366,
      "content": "function processLegalRequirementChangeTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 2571,
      "content": "function processTeamSizeChangesTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 2776,
      "content": "function processOnboardingCompletionTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 2980,
      "content": "function processTrainingCompletionTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 3206,
      "content": "function processSuccessionPlanActivationTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 3431,
      "content": "function processFlightRiskPredictionTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 3674,
      "content": "function processSkillObsolescenceRiskTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 3920,
      "content": "function processLeadershipGapPredictionTrigger(trigger: any, results: UnifiedResults, config: any): TriggerResult | null {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 4167,
      "content": "async function logTriggeredAction(trigger: any, result: TriggerResult, unifiedResults: UnifiedResults & { tenantId: string }): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/trigger-engine.ts",
      "line": 4615,
      "content": "} as any);",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/unified-results.ts",
      "line": 151,
      "content": "function buildAnalysisSection(sectionData: any, category: string): AnalysisSection {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/unified-results.ts",
      "line": 186,
      "content": "function generateOpportunities(sectionData: any, category: string): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/unified-results.ts",
      "line": 210,
      "content": "function generateRisks(sectionData: any, category: string): string[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/results/unified-results.ts",
      "line": 215,
      "content": "if (sectionData.gaps?.some((gap: any) => gap.impact === 'high')) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 271,
      "content": "// TODO: Schedule actual posting - implement scheduler integration",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 277,
      "content": "theme: any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 279,
      "content": "adaptation: any",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 295,
      "content": "text += '\\n\\nKey Results:\\n' + theme.metrics.map((m: any) => `• ${m}`).join('\\n');",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 298,
      "content": "text += '\\n\\nFeatures:\\n' + theme.features.map((f: any) => `✓ ${f}`).join('\\n');",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 320,
      "content": "text += '\\n\\nDid you know?\\n' + theme.insights.map((i: any) => `💡 ${i}`).join('\\n');",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 378,
      "content": "async trackPostPerformance(postId: string, metrics: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 335,
      "content": "const lastIndex = (config as any)?.lastThemeIndex || 0;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/campaign-manager.ts",
      "line": 340,
      "content": "(config as any).lastThemeIndex = nextIndex;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/content-generator.ts",
      "line": 159,
      "content": "platform: platform as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/content-generator.ts",
      "line": 160,
      "content": "contentType: contentType as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/content-generator.ts",
      "line": 191,
      "content": "platform: platform as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 45,
      "content": "async function initializePlatform(account: any): Promise<void> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 72,
      "content": "async function verifyAccountCredentials(account: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 94,
      "content": "async function verifyLinkedInCredentials(account: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 105,
      "content": "async function verifyTwitterCredentials(account: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 116,
      "content": "async function verifyFacebookCredentials(account: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/init.ts",
      "line": 127,
      "content": "async function verifyInstagramCredentials(account: any): Promise<boolean> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/scheduler.ts",
      "line": 233,
      "content": "private formatCalendarView(posts: ScheduledPost[], startDate: Date, endDate: Date): any[] {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/social-media/scheduler.ts",
      "line": 175,
      "content": "status: post.status as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/socialmedia.ts",
      "line": 88,
      "content": "private async generatePlatformContent(platform: string, analysis: any, analysisType: string): Promise<SocialMediaContent> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/stripe.ts",
      "line": 188,
      "content": "plan: planId as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/stripe.ts",
      "line": 238,
      "content": "plan: newPlanId as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/workflow/automated-flow.ts",
      "line": 12,
      "content": "config: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/workflow/automated-flow.ts",
      "line": 22,
      "content": "context: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/workflow/automated-flow.ts",
      "line": 55,
      "content": "async executeFlow(flowId: string, tenantId: string, context: any): Promise<FlowExecution> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/workflow/automated-flow.ts",
      "line": 212,
      "content": "export async function executeFlow(flowId: string, tenantId: string, context: any): Promise<FlowExecution> {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/services/workflow/automated-flow.ts",
      "line": 39,
      "content": "steps: steps as any,",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": "as any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/test-triggers-comprehensive.js",
      "line": 307,
      "content": "const mockResults = createMockUnifiedResults(testCase.recommendations);",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/test-triggers-comprehensive.js",
      "line": 308,
      "content": "const mockTrigger = createMockTrigger(testCase.triggerType);",
      "rule": "noMockData",
      "severity": "error",
      "message": "Mock data detected - use real database queries",
      "pattern": "const mock[A-Z]\\w*\\s*=",
      "priority": "critical"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 85,
      "content": "triggerData: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 89,
      "content": "learningHistory: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 90,
      "content": "preferences: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 95,
      "content": "availableCourses: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 99,
      "content": "departmentNeeds: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 100,
      "content": "teamDynamics?: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 122,
      "content": "enrollments: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 123,
      "content": "completions: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 124,
      "content": "assessments: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 125,
      "content": "timeSpent: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 126,
      "content": "engagementMetrics: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 127,
      "content": "learningHistory: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 133,
      "content": "learningPreferences: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 134,
      "content": "performanceHistory: any[];",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 138,
      "content": "performanceStandards: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/lxp.ts",
      "line": 139,
      "content": "departmentMetrics: any;",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/types/performance.ts",
      "line": 48,
      "content": "// TODO: CoachingSession types - table doesn't exist in schema yet",
      "rule": "noPlaceholders",
      "severity": "error",
      "message": "Placeholder detected - complete implementation required",
      "pattern": "// TODO:",
      "priority": "high"
    },
    {
      "file": "backend/utils/logger.ts",
      "line": 11,
      "content": "info(message: string, data?: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/utils/logger.ts",
      "line": 21,
      "content": "warn(message: string, data?: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/utils/logger.ts",
      "line": 26,
      "content": "debug(message: string, data?: any) {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    },
    {
      "file": "backend/utils/module-access.ts",
      "line": 160,
      "content": "return async (req: any, res: any, next: any) => {",
      "rule": "noAnyType",
      "severity": "warning",
      "message": "'any' type detected - use strict TypeScript types",
      "pattern": ":\\s*any(?![\\w])",
      "priority": "low"
    }
  ],
  "filesScanned": 362,
  "totalLines": 126113
}